{"version":3,"file":"static/js/main.a486919d.js","mappings":"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","sources":["src/supabaseClient.js","src/components/Header.tsx","src/screens/LoginScreen.tsx","src/screens/HomeScreen.tsx","src/components/BookingFormModal.tsx","src/components/BookingEditModal.tsx","src/screens/CalendarScreen.tsx","src/screens/AnzahlungenScreen.tsx","src/screens/EinstellungenScreen.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// src/supabaseClient.ts\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = \"https://elywhketsxozigeycjkj.supabase.co\";\r\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVseXdoa2V0c3hvemlnZXljamtqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA0OTU5MjEsImV4cCI6MjA1NjA3MTkyMX0.oIfd4wPU2UocrmRXIWeCHsofz2rFekWTD5ISMiRAQ70\";\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n","// src/components/Header.tsx\r\nimport React from 'react';\r\nimport { View, Image, StyleSheet } from 'react-native';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <View style={styles.header}>\r\n      {/* Linke Seite: leer, damit das zentrale Logo zentriert bleibt */}\r\n      <View style={styles.sideContainer} />\r\n      \r\n      {/* Zentrales Logo */}\r\n      <Image source={require('../../assets/logo.png')} style={styles.logo} />\r\n      \r\n      {/* Rechte Seite: LogoBetrieb, etwas größer */}\r\n      <View style={styles.sideContainer}>\r\n        <Image source={require('../../assets/LogoBetrieb.png')} style={styles.logoBetrieb} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    height: 50, // Anpassen, damit beide Logos gut hineinpassen\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    paddingHorizontal: 10,\r\n  },\r\n  sideContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  logo: {\r\n    width: 80,\r\n    height: 80,\r\n    resizeMode: 'contain',\r\n  },\r\n  logoBetrieb: {\r\n    width: 100, // Etwas größer als das Hauptlogo\r\n    height: 100,\r\n    resizeMode: 'contain',\r\n  },\r\n});\r\n\r\nexport default Header;\r\n","// src/screens/LoginScreen.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { supabase } from '../supabaseClient';\r\nimport Header from '../components/Header';\r\n\r\ntype RootStackParamList = {\r\n  Login: undefined;\r\n  Home: undefined;\r\n};\r\n\r\ntype LoginScreenNavigationProp = NativeStackNavigationProp<\r\n  RootStackParamList,\r\n  'Login'\r\n>;\r\n\r\nexport default function LoginScreen() {\r\n  const navigation = useNavigation<LoginScreenNavigationProp>();\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [errorMsg, setErrorMsg] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const checkLoginStatus = async () => {\r\n      try {\r\n        const lastLogin = await AsyncStorage.getItem('lastLogin');\r\n        const { data: { session } } = await supabase.auth.getSession();\r\n        if (lastLogin && session) {\r\n          const lastLoginTime = new Date(parseInt(lastLogin));\r\n          const now = new Date();\r\n          const differenceInHours = (now.getTime() - lastLoginTime.getTime()) / (1000 * 60 * 60);\r\n          if (differenceInHours < 24) {\r\n            navigation.replace('Home');\r\n            return;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Fehler beim Prüfen der gespeicherten Anmeldung:', error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkLoginStatus();\r\n  }, []);\r\n\r\n  const handleLogin = async () => {\r\n    setErrorMsg('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (error || !data.user) {\r\n        setErrorMsg(error ? error.message : 'Login fehlgeschlagen');\r\n        setLoading(false);\r\n      } else {\r\n        await AsyncStorage.setItem('lastLogin', Date.now().toString());\r\n        navigation.replace('Home');\r\n      }\r\n    } catch (err: any) {\r\n      setErrorMsg(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n        <Text>Prüfe Login...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header />\r\n      <Text style={styles.title}>Login</Text>\r\n      {errorMsg ? <Text style={styles.error}>{errorMsg}</Text> : null}\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"E-Mail\"\r\n        autoCapitalize=\"none\"\r\n        keyboardType=\"email-address\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Passwort\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n      <Button title=\"Einloggen\" onPress={handleLogin} disabled={loading} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 26,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    marginBottom: 12,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 6,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  Platform,\r\n} from 'react-native';\r\nimport Modal from 'react-native-modal';\r\nimport { supabase } from '../supabaseClient';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Header from '../components/Header';\r\n\r\nexport type DayCellData = {\r\n  date: Date;\r\n  dayNumber: string;\r\n  monthYear: string;\r\n};\r\n\r\ntype Zimmer = {\r\n  id: number;\r\n  nummer: string;\r\n};\r\n\r\ntype Buchung = {\r\n  id: number;\r\n  zimmer_id: number;\r\n  gast_id: number | null;\r\n  check_in: string;\r\n  check_out: string;\r\n  anzahl_personen: number;\r\n  status: string;\r\n  verpflegung: string | null;\r\n  zusatz_preis: string;\r\n  tel_email: string;\r\n};\r\n\r\ntype Gast = {\r\n  id: number;\r\n  vorname: string;\r\n  nachname: string;\r\n};\r\n\r\nconst DAY_WIDTH = 60;\r\nconst FIXED_WIDTH = 80;\r\nconst ROW_HEIGHT = 35;\r\n\r\nfunction generateExtendedDaysArray(): DayCellData[] {\r\n  const result: DayCellData[] = [];\r\n  const startDate = new Date();\r\n  startDate.setDate(startDate.getDate() - 60);\r\n  const endDate = new Date();\r\n  endDate.setMonth(endDate.getMonth() + 18);\r\n  let current = new Date(startDate);\r\n  while (current <= endDate) {\r\n    const dayNumber = current.getDate().toString().padStart(2, '0');\r\n    const monthYear = current.toLocaleDateString('de-DE', {\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n    }).replace('.', '/');\r\n    result.push({ date: new Date(current), dayNumber, monthYear });\r\n    current.setDate(current.getDate() + 1);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction isSameDay(d1: Date, d2: Date): boolean {\r\n  return (\r\n    d1.getFullYear() === d2.getFullYear() &&\r\n    d1.getMonth() === d2.getMonth() &&\r\n    d1.getDate() === d2.getDate()\r\n  );\r\n}\r\n\r\nfunction findDayIndex(date: Date, days: DayCellData[]): number {\r\n  return days.findIndex((d) => isSameDay(d.date, date));\r\n}\r\n\r\nfunction getBuchungForDay(\r\n  dayData: DayCellData,\r\n  zimmerId: number,\r\n  buchungen: Buchung[]\r\n): Buchung | null {\r\n  return (\r\n    buchungen.find((b) => {\r\n      if (b.zimmer_id !== zimmerId) return false;\r\n      const start = new Date(b.check_in);\r\n      const end = new Date(b.check_out);\r\n      return dayData.date >= start && dayData.date <= end;\r\n    }) || null\r\n  );\r\n}\r\n\r\nconst HomeScreen: React.FC = () => {\r\n  const [daysArray, setDaysArray] = useState<DayCellData[]>([]);\r\n  const [zimmer, setZimmer] = useState<Zimmer[]>([]);\r\n  const [buchungen, setBuchungen] = useState<Buchung[]>([]);\r\n  const [gaeste, setGaeste] = useState<Gast[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [detailModalVisible, setDetailModalVisible] = useState(false);\r\n  const [selectedDetailBooking, setSelectedDetailBooking] = useState<Buchung | null>(null);\r\n\r\n  const scrollViewRef = useRef<ScrollView>(null);\r\n  const navigation = useNavigation();\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data: zimmerData } = await supabase.from('zimmer').select('*');\r\n      if (zimmerData) setZimmer(zimmerData as Zimmer[]);\r\n      const { data: buchungenData } = await supabase.from('buchungen').select('*');\r\n      if (buchungenData) setBuchungen(buchungenData as Buchung[]);\r\n      const { data: gaesteData } = await supabase.from('gaeste').select('*');\r\n      if (gaesteData) setGaeste(gaesteData as Gast[]);\r\n    } catch (error) {\r\n      console.error('Fehler beim Laden der Daten:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDaysArray(generateExtendedDaysArray());\r\n    fetchData();\r\n\r\n    // Alle 2 Minuten Daten abrufen\r\n    const interval = setInterval(fetchData, 120000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (daysArray.length > 0 && scrollViewRef.current) {\r\n      const today = new Date();\r\n      const indexOfToday = findDayIndex(today, daysArray);\r\n      if (indexOfToday !== -1) {\r\n        const offsetX = FIXED_WIDTH + indexOfToday * DAY_WIDTH;\r\n        if (Platform.OS === 'ios') {\r\n          setTimeout(() => {\r\n            scrollViewRef.current?.scrollTo({ x: offsetX, animated: false });\r\n          }, 100);\r\n        } else {\r\n          scrollViewRef.current?.scrollTo({ x: offsetX, animated: false });\r\n        }\r\n      }\r\n    }\r\n  }, [daysArray]);\r\n\r\n  const formatDate = (date: Date): string => {\r\n    const d = date.getDate().toString().padStart(2, '0');\r\n    const m = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const y = date.getFullYear();\r\n    return `${d}.${m}.${y}`;\r\n  };\r\n\r\n  const changeDate = (offset: number) => {\r\n    const newDate = new Date(selectedDate);\r\n    newDate.setDate(newDate.getDate() + offset);\r\n    setSelectedDate(newDate);\r\n  };\r\n\r\n  const openBookingDetails = (b: Buchung) => {\r\n    setSelectedDetailBooking(b);\r\n    setDetailModalVisible(true);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (!searchQuery.trim()) return;\r\n    const lowerQuery = searchQuery.toLowerCase();\r\n    const matchingBooking = buchungen.find((b) => {\r\n      const guest = gaeste.find((g) => g.id === b.gast_id);\r\n      if (!guest) return false;\r\n      const fullName = (guest.vorname + ' ' + guest.nachname).toLowerCase();\r\n      return fullName.includes(lowerQuery);\r\n    });\r\n    if (matchingBooking) {\r\n      const checkInDate = new Date(matchingBooking.check_in);\r\n      const index = findDayIndex(checkInDate, daysArray);\r\n      if (index !== -1 && scrollViewRef.current) {\r\n        const offsetX = FIXED_WIDTH + index * DAY_WIDTH;\r\n        scrollViewRef.current.scrollTo({ x: offsetX, animated: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  const goToCalendar = () => {\r\n    navigation.navigate('Calendarscreen');\r\n  };\r\n  const goToAnzahlungen = () => {\r\n    navigation.navigate('AnzahlungenScreen');\r\n  };\r\n  const goToSettings = () => {\r\n    navigation.navigate('EinstellungenScreen');\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Header />\r\n      <Text style={styles.title}>Tagesübersicht</Text>\r\n      <View style={styles.dateSelector}>\r\n        <Button title=\"‹\" onPress={() => changeDate(-1)} />\r\n        <Text style={styles.dateText}>{formatDate(selectedDate)}</Text>\r\n        <Button title=\"›\" onPress={() => changeDate(1)} />\r\n      </View>\r\n      <View style={styles.navigationButtons}>\r\n        <Button title=\"Zum Kalender\" onPress={goToCalendar} />\r\n        <Button title=\"Anzahlungen\" onPress={goToAnzahlungen} />\r\n        <Button title=\"Einstellungen\" onPress={goToSettings} />\r\n      </View>\r\n      <View style={styles.roomList}>\r\n        {zimmer.map((room) => (\r\n          <View key={room.id} style={styles.roomCard}>\r\n            <Text style={styles.roomTitle}>Zimmer {room.nummer}</Text>\r\n            {renderRoomStatus(room, selectedDate, buchungen, gaeste)}\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.summary}>\r\n        <View style={styles.summaryBorder}>\r\n          <Text style={styles.summaryText}>\r\n            Frühstück (B&B):{' '}\r\n            {buchungen\r\n              .filter(\r\n                (b) =>\r\n                 (b.verpflegung === 'Frühstück' || b.verpflegung === 'Halbpension') &&\r\n                  new Date(b.check_in) <= selectedDate &&\r\n                  new Date(b.check_out) >= selectedDate\r\n              )\r\n              .reduce((sum, b) => sum + b.anzahl_personen, 0)}{' '}\r\n            P.\r\n          </Text>\r\n        </View>\r\n        <View style={styles.summaryBorder}>\r\n          <Text style={styles.summaryText}>\r\n            Halbpension (HP):{' '}\r\n            {buchungen\r\n              .filter(\r\n                (b) =>\r\n                  b.verpflegung === 'Halbpension' &&\r\n                  new Date(b.check_in) <= selectedDate &&\r\n                  new Date(b.check_out) >= selectedDate\r\n              )\r\n              .reduce((sum, b) => sum + b.anzahl_personen, 0)}{' '}\r\n            P.\r\n          </Text>\r\n        </View>\r\n        <View style={styles.summaryBorder}>\r\n          <Text style={styles.summaryText}>\r\n            Check-Ins:{' '}\r\n            {buchungen\r\n              .filter((b) => isSameDay(new Date(b.check_in), selectedDate))\r\n              .reduce((sum, b) => sum + b.anzahl_personen, 0)}{' '}\r\n            P.\r\n          </Text>\r\n          {buchungen\r\n            .filter((b) => isSameDay(new Date(b.check_in), selectedDate))\r\n            .map((b, idx) => {\r\n              const guest = gaeste.find((g) => g.id === b.gast_id);\r\n              const roomNum = zimmer.find((z) => z.id === b.zimmer_id)?.nummer || '';\r\n              return (\r\n                <TouchableOpacity key={`in-${idx}`} onPress={() => openBookingDetails(b)}>\r\n                  <Text style={styles.guestName}>\r\n                    Zimmer {roomNum} - {guest ? `${guest.vorname} ${guest.nachname}` : 'Unbekannt'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n        </View>\r\n        <View style={styles.summaryBorder}>\r\n          <Text style={styles.summaryText}>\r\n            Check-Outs:{' '}\r\n            {buchungen\r\n              .filter((b) => isSameDay(new Date(b.check_out), selectedDate))\r\n              .reduce((sum, b) => sum + b.anzahl_personen, 0)}{' '}\r\n            P.\r\n          </Text>\r\n          {buchungen\r\n            .filter((b) => isSameDay(new Date(b.check_out), selectedDate))\r\n            .map((b, idx) => {\r\n              const guest = gaeste.find((g) => g.id === b.gast_id);\r\n              const roomNum = zimmer.find((z) => z.id === b.zimmer_id)?.nummer || '';\r\n              return (\r\n                <TouchableOpacity key={`out-${idx}`} onPress={() => openBookingDetails(b)}>\r\n                  <Text style={styles.guestName}>\r\n                    Zimmer {roomNum} - {guest ? `${guest.vorname} ${guest.nachname}` : 'Unbekannt'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n        </View>\r\n        <View style={styles.summaryBorder}>\r\n          <Text style={styles.summaryText}>Anwesende Gäste:</Text>\r\n          {buchungen\r\n            .filter(\r\n              (b) =>\r\n                selectedDate > new Date(b.check_in) &&\r\n                selectedDate < new Date(b.check_out)\r\n            )\r\n            .map((b, idx) => {\r\n              const guest = gaeste.find((g) => g.id === b.gast_id);\r\n              const roomNum = zimmer.find((z) => z.id === b.zimmer_id)?.nummer || '';\r\n              return (\r\n                <TouchableOpacity key={`active-${idx}`} onPress={() => openBookingDetails(b)}>\r\n                  <Text style={styles.guestName}>\r\n                    Zimmer {roomNum} - {guest ? `${guest.vorname} ${guest.nachname}` : 'Unbekannt'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n        </View>\r\n      </View>\r\n      {selectedDetailBooking && (\r\n        <Modal\r\n          isVisible={detailModalVisible}\r\n          onBackdropPress={() => setDetailModalVisible(false)}\r\n          useNativeDriver={false}\r\n          style={styles.customModalContainer}\r\n        >\r\n          <View style={styles.customModalOverlay}>\r\n            <View style={styles.customModalContent}>\r\n              <Text style={styles.modalTitle}>Buchungsdetails</Text>\r\n              <Text>\r\n                Zimmer:{' '}\r\n                {zimmer.find((z) => z.id === selectedDetailBooking.zimmer_id)?.nummer}\r\n              </Text>\r\n              <Text>Check-In: {selectedDetailBooking.check_in}</Text>\r\n              <Text>Check-Out: {selectedDetailBooking.check_out}</Text>\r\n              <Text>\r\n                Gast:{' '}\r\n                {(() => {\r\n                  const guest = gaeste.find((g) => g.id === selectedDetailBooking.gast_id);\r\n                  return guest ? `${guest.vorname} ${guest.nachname}` : 'Unbekannt';\r\n                })()}\r\n              </Text>\r\n              <Text>Personen: {selectedDetailBooking.anzahl_personen}</Text>\r\n              <Text>Status: {selectedDetailBooking.status}</Text>\r\n              <Text>\r\n                Verpflegung: {selectedDetailBooking.verpflegung || '-'}\r\n              </Text>\r\n              <Text>Anzahlung: {selectedDetailBooking.anzahlung}</Text>\r\n              <Text>\r\n                Preis pro Person: {selectedDetailBooking.preis_pro_person}\r\n              </Text>\r\n              <Text>Zusatz Preis: {selectedDetailBooking.zusatz_preis}</Text>\r\n              <Text>Tel.: / email: {selectedDetailBooking.tel_email}</Text>\r\n              <Text>Notiz: {selectedDetailBooking.notiz || '-'}</Text>\r\n              <Button title=\"Schließen\" onPress={() => setDetailModalVisible(false)} />\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      )}\r\n      <View style={styles.navFooter}>\r\n        <Button title=\"Zum Kalender\" onPress={goToCalendar} />\r\n        <Button title=\"Anzahlungen\" onPress={goToAnzahlungen} />\r\n        <Button title=\"Einstellungen\" onPress={goToSettings} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nfunction renderRoomStatus(\r\n  room: Zimmer,\r\n  selectedDate: Date,\r\n  buchungen: Buchung[],\r\n  gaeste: Gast[]\r\n) {\r\n  const roomBookings = buchungen.filter((b) => b.zimmer_id === room.id);\r\n  const currentBookings = roomBookings.filter((b) => {\r\n    const checkIn = new Date(b.check_in);\r\n    const checkOut = new Date(b.check_out);\r\n    return (\r\n      isSameDay(selectedDate, checkIn) ||\r\n      isSameDay(selectedDate, checkOut) ||\r\n      (selectedDate > checkIn && selectedDate < checkOut)\r\n    );\r\n  });\r\n\r\n  if (currentBookings.length === 0) {\r\n    return (\r\n      <View style={[styles.statusBar, { backgroundColor: \"#d3d3d3\" }]}>\r\n        <Text style={styles.statusBarText}>Frei</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.statusBarsContainer}>\r\n      {currentBookings.map((b) => {\r\n        const checkInDate = new Date(b.check_in);\r\n        const checkOutDate = new Date(b.check_out);\r\n        const guest = gaeste.find((g) => g.id === b.gast_id);\r\n        const guestLastName = guest ? guest.nachname : 'Unbekannt';\r\n        let verpflegungAbbr = '';\r\n        if (b.verpflegung) {\r\n          verpflegungAbbr =\r\n            b.verpflegung === 'Frühstück'\r\n              ? 'B&B'\r\n              : b.verpflegung === 'Halbpension'\r\n              ? 'HP'\r\n              : b.verpflegung;\r\n        }\r\n        let statusLabel = \"\";\r\n        let backgroundColor = \"\";\r\n        if (isSameDay(checkInDate, checkOutDate)) {\r\n          statusLabel = `Check-in/Check-out: ${guestLastName} (${b.anzahl_personen} P.) [${verpflegungAbbr}]`;\r\n          backgroundColor = \"#ADD8E6\";\r\n        } else if (isSameDay(selectedDate, checkInDate)) {\r\n          statusLabel = `Check-in: ${guestLastName} (${b.anzahl_personen} P.) [${verpflegungAbbr}]`;\r\n          backgroundColor = \"#ADD8E6\";\r\n        } else if (isSameDay(selectedDate, checkOutDate)) {\r\n          statusLabel = `Check-out: ${guestLastName} (${b.anzahl_personen} P.) [${verpflegungAbbr}]`;\r\n          backgroundColor = \"#FFDAB9\";\r\n        } else {\r\n          statusLabel = `belegt: ${guestLastName} (${b.anzahl_personen} P.) [${verpflegungAbbr}]`;\r\n          backgroundColor = \"#90EE90\";\r\n        }\r\n        return (\r\n          <View key={b.id} style={[styles.statusBar, { backgroundColor }]}>\r\n            <Text style={styles.statusBarText}>{statusLabel}</Text>\r\n          </View>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  dateSelector: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  dateText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  navigationButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginBottom: 16,\r\n  },\r\n  roomList: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n  roomCard: {\r\n    width: '48%',\r\n    backgroundColor: '#f9f9f9',\r\n    padding: 8,\r\n    marginBottom: 16,\r\n    borderRadius: 4,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  roomTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  statusText: {\r\n    fontSize: 14,\r\n  },\r\n  statusBar: {\r\n    padding: 4,\r\n    borderRadius: 4,\r\n    marginVertical: 2,\r\n  },\r\n  statusBarText: {\r\n    fontSize: 14,\r\n    color: '#000',\r\n  },\r\n  statusBarsContainer: {\r\n    flexDirection: 'column',\r\n  },\r\n  guestName: {\r\n    color: 'blue',\r\n    textDecorationLine: 'underline',\r\n    marginVertical: 2,\r\n  },\r\n  summary: {\r\n    marginVertical: 16,\r\n  },\r\n  summaryBorder: {\r\n    borderTopWidth: 1,\r\n    borderColor: '#ccc',\r\n    paddingVertical: 8,\r\n  },\r\n  summaryText: {\r\n    fontSize: 16,\r\n  },\r\n  customModalContainer: {\r\n    margin: 0,\r\n    justifyContent: 'center',\r\n  },\r\n  customModalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  customModalContent: {\r\n    backgroundColor: '#fff',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    width: '85%',\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 12,\r\n    textAlign: 'center',\r\n  },\r\n  navFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 16,\r\n  },\r\n});\r\n\r\nexport { isSameDay, findDayIndex };\r\nexport default HomeScreen;\r\n\r\n","import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  Platform,\r\n  ScrollView,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  Alert,\r\n} from 'react-native';\r\nimport Modal from 'react-native-modal';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nfunction myAlert(title: string, msg: string) {\r\n  if (Platform.OS === 'web') {\r\n    window.alert(`${title}: ${msg}`);\r\n  } else {\r\n    Alert.alert(title, msg);\r\n  }\r\n}\r\n\r\ntype RadioGroupProps = {\r\n  options: { label: string; value: string }[];\r\n  selectedValue: string;\r\n  onChange: (value: string) => void;\r\n};\r\n\r\nconst RadioGroup: React.FC<RadioGroupProps> = memo(({ options, selectedValue, onChange }) => {\r\n  return (\r\n    <View style={styles.radioGroup}>\r\n      {options.map((opt) => {\r\n        const isSelected = opt.value === selectedValue;\r\n        return (\r\n          <TouchableWithoutFeedback key={opt.value} onPress={() => onChange(opt.value)}>\r\n            <View style={[styles.radioOption, isSelected && styles.radioOptionSelected]}>\r\n              <Text style={[styles.radioLabel, isSelected && styles.radioLabelSelected]}>\r\n                {opt.label}\r\n              </Text>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n});\r\n\r\ntype BookingFormModalProps = {\r\n  isVisible: boolean;\r\n  checkIn: string;\r\n  checkOut: string;\r\n  onClose: () => void;\r\n  onSubmit: (data: {\r\n    guestName: string;\r\n    personCount: number;\r\n    status: string;\r\n    anzahlung: number;\r\n    verpflegung: string;\r\n    preisProPerson: number | null;\r\n    hund: boolean;\r\n    zusatzPreis: string;\r\n    notiz: string;\r\n    tel_email: string;\r\n  }) => Promise<void>;\r\n  onRefresh?: () => Promise<void>;\r\n  initialGuestName?: string;\r\n  initialPersonCount?: number;\r\n  // Das Zimmer wurde bereits gewählt\r\n  selectedRoomId?: number;\r\n};\r\n\r\nconst statusOptions = [\r\n  { label: 'Belegt', value: 'belegt' },\r\n  { label: 'Anzahlung', value: 'anzahlung' },\r\n  { label: 'Anz. bez', value: 'anzahlung_bezahlt' },\r\n];\r\nconst verpflegungOptions = [\r\n  { label: 'Frühstück', value: 'Frühstück' },\r\n  { label: 'Halbpension', value: 'Halbpension' },\r\n];\r\nconst hundOptions = [\r\n  { label: 'Nein', value: 'nein' },\r\n  { label: 'Ja', value: 'ja' },\r\n];\r\n\r\nconst BookingFormModal: React.FC<BookingFormModalProps> = ({\r\n  isVisible,\r\n  checkIn,\r\n  checkOut,\r\n  onClose,\r\n  onSubmit,\r\n  onRefresh,\r\n  initialGuestName = '',\r\n  initialPersonCount = 0,\r\n  selectedRoomId,\r\n}) => {\r\n  const [guestName, setGuestName] = useState(initialGuestName);\r\n  const [personCount, setPersonCount] = useState(initialPersonCount.toString());\r\n  const [status, setStatus] = useState('belegt');\r\n  const [anzahlung, setAnzahlung] = useState('0');\r\n  const [verpflegung, setVerpflegung] = useState('Frühstück');\r\n  const [preisProPerson, setPreisProPerson] = useState('');\r\n  const [hund, setHund] = useState('nein');\r\n  const [zusatzPreis, setZusatzPreis] = useState('');\r\n  const [telEmail, setTelEmail] = useState('');\r\n  const [notiz, setNotiz] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Beim Öffnen des Modals initialisieren wir den Zustand\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      setGuestName(initialGuestName);\r\n      setPersonCount(initialPersonCount.toString());\r\n      setStatus('belegt');\r\n      setAnzahlung('0');\r\n      setVerpflegung('Frühstück');\r\n      setPreisProPerson('');\r\n      setHund('nein');\r\n      setZusatzPreis('');\r\n      setTelEmail('');\r\n      setNotiz('');\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [isVisible, initialGuestName, initialPersonCount]);\r\n\r\n  useEffect(() => {\r\n    if (anzahlung.trim() !== '' && anzahlung !== '0') {\r\n      setStatus('anzahlung');\r\n    }\r\n  }, [anzahlung]);\r\n\r\n  const isFormValid =\r\n    guestName.trim().split(' ').length >= 2 &&\r\n    !isNaN(parseInt(personCount)) &&\r\n    parseInt(personCount) > 0;\r\n\r\n  // Prüfen, ob das ausgewählte Zimmer im angegebenen Zeitraum verfügbar ist\r\n  const validateRoomAvailability = useCallback(\r\n    async (roomId: number, newCheckIn: string, newCheckOut: string): Promise<boolean> => {\r\n      const { data, error } = await supabase\r\n        .from('buchungen')\r\n        .select('id')\r\n        .eq('zimmer_id', roomId)\r\n        .is('deleted_at', null)\r\n        .filter('check_in', 'lt', newCheckOut)\r\n        .filter('check_out', 'gt', newCheckIn);\r\n      if (error) {\r\n        myAlert('Fehler', 'Fehler bei der Verfügbarkeitsprüfung.');\r\n        return false;\r\n      }\r\n      return data && data.length === 0;\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleCreate = useCallback(async () => {\r\n    if (isSubmitting) return;\r\n    if (!selectedRoomId) {\r\n      myAlert('Fehler', 'Kein Zimmer ausgewählt.');\r\n      return;\r\n    }\r\n    const count = parseInt(personCount);\r\n    if (isNaN(count) || count <= 0) {\r\n      myAlert('Fehler', 'Bitte eine gültige Anzahl an Personen eingeben.');\r\n      return;\r\n    }\r\n    setIsSubmitting(true);\r\n    try {\r\n      const parsedAnzahlung = parseFloat(anzahlung);\r\n      const parsedPreisProPerson = preisProPerson.trim() === '' ? null : parseFloat(preisProPerson);\r\n      const parsedZusatzPreis = zusatzPreis.trim();\r\n      console.log('Submitting booking with data:', {\r\n        guestName,\r\n        personCount: count,\r\n        status,\r\n        anzahlung: isNaN(parsedAnzahlung) ? 0 : parsedAnzahlung,\r\n        verpflegung,\r\n        preisProPerson: parsedPreisProPerson,\r\n        hund: hund === 'ja',\r\n        zusatzPreis: parsedZusatzPreis,\r\n        notiz,\r\n        tel_email: telEmail,\r\n      });\r\n\r\n      const nameParts = guestName.trim().split(' ');\r\n      if (nameParts.length < 2) {\r\n        myAlert('Fehler', 'Bitte Vor- und Nachname eingeben.');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      let guestId: number | null = null;\r\n      const { data: existingGuest, error: existingGuestError } = await supabase\r\n        .from('gaeste')\r\n        .select('id')\r\n        .eq('vorname', nameParts[0])\r\n        .eq('nachname', nameParts[1]);\r\n      if (existingGuestError) {\r\n        console.log('Fehler bei der Gast-Suche', existingGuestError);\r\n      }\r\n      if (existingGuest && existingGuest.length > 0) {\r\n        guestId = existingGuest[0].id;\r\n      } else {\r\n        const { data: newGuest } = await supabase\r\n          .from('gaeste')\r\n          .insert([{ vorname: nameParts[0], nachname: nameParts[1] }])\r\n          .select('*')\r\n          .single();\r\n        if (!newGuest) {\r\n          myAlert('Fehler', 'Gast konnte nicht erstellt werden.');\r\n          setIsSubmitting(false);\r\n          return;\r\n        }\r\n        guestId = newGuest.id;\r\n      }\r\n\r\n      const available = await validateRoomAvailability(selectedRoomId, checkIn, checkOut);\r\n      if (!available) {\r\n        myAlert('Fehler', 'Das Zimmer ist im angegebenen Zeitraum bereits vergeben.');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      const { error } = await supabase.from('buchungen').insert([\r\n        {\r\n          zimmer_id: selectedRoomId,\r\n          gast_id: guestId,\r\n          check_in: checkIn,\r\n          check_out: checkOut,\r\n          anzahl_personen: count,\r\n          preis_pro_person: parsedPreisProPerson ?? 0,\r\n          anzahlung: isNaN(parsedAnzahlung) ? 0 : parsedAnzahlung,\r\n          status,\r\n          verpflegung,\r\n          hund: hund === 'ja',\r\n          zusatz_preis: parsedZusatzPreis,\r\n          tel_email: telEmail,\r\n          notiz,\r\n        },\r\n      ]);\r\n      if (error) {\r\n        myAlert('Fehler', error.message);\r\n      } else {\r\n        myAlert('Erfolg', 'Buchung erstellt!');\r\n        onClose();\r\n        if (onRefresh) await onRefresh();\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Fehler beim Erstellen der Buchung:', err);\r\n      myAlert('Fehler', err.message || 'Unbekannter Fehler beim Erstellen der Buchung.');\r\n    }\r\n    setIsSubmitting(false);\r\n  }, [\r\n    isSubmitting,\r\n    personCount,\r\n    anzahlung,\r\n    preisProPerson,\r\n    zusatzPreis,\r\n    guestName,\r\n    status,\r\n    verpflegung,\r\n    hund,\r\n    telEmail,\r\n    notiz,\r\n    checkIn,\r\n    checkOut,\r\n    selectedRoomId,\r\n    onClose,\r\n    onRefresh,\r\n    validateRoomAvailability,\r\n  ]);\r\n\r\n  const content = (\r\n    <ScrollView\r\n      contentContainerStyle={styles.scrollContainer}\r\n      keyboardShouldPersistTaps=\"handled\"\r\n      keyboardDismissMode=\"on-drag\"\r\n    >\r\n      <View style={styles.modalOverlay}>\r\n        <View style={styles.modalContent}>\r\n          <Text style={styles.modalTitle}>Neue Buchung</Text>\r\n          <Text>Check-In: {checkIn}</Text>\r\n          <Text>Check-Out: {checkOut}</Text>\r\n          <Text style={styles.label}>Gastname:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Vorname Nachname\"\r\n            value={guestName}\r\n            onChangeText={setGuestName}\r\n            returnKeyType=\"done\"\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Personenanzahl:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"z. B. 2\"\r\n            value={personCount}\r\n            onChangeText={setPersonCount}\r\n            keyboardType=\"numeric\"\r\n            returnKeyType=\"done\"\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Status:</Text>\r\n          <RadioGroup options={statusOptions} selectedValue={status} onChange={setStatus} />\r\n          <Text style={styles.label}>Anzahlung:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"0\"\r\n            value={anzahlung}\r\n            onChangeText={setAnzahlung}\r\n            keyboardType=\"numeric\"\r\n            returnKeyType=\"done\"\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Verpflegung:</Text>\r\n          <RadioGroup options={verpflegungOptions} selectedValue={verpflegung} onChange={setVerpflegung} />\r\n          <Text style={styles.label}>Preis pro Person:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"z. B. 50\"\r\n            value={preisProPerson}\r\n            onChangeText={setPreisProPerson}\r\n            keyboardType=\"numeric\"\r\n            returnKeyType=\"done\"\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Hund:</Text>\r\n          <RadioGroup options={hundOptions} selectedValue={hund} onChange={setHund} />\r\n          <Text style={styles.label}>Zusatz Preis:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"z. B. 10\"\r\n            value={zusatzPreis}\r\n            onChangeText={setZusatzPreis}\r\n            returnKeyType=\"done\"\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Tel.: / email:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Telefon oder Email\"\r\n            value={telEmail}\r\n            onChangeText={setTelEmail}\r\n            returnKeyType=\"done\"\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Notiz:</Text>\r\n          <TextInput\r\n            style={[styles.input, { height: 80 }]}\r\n            placeholder=\"Notiz\"\r\n            value={notiz}\r\n            onChangeText={setNotiz}\r\n            multiline\r\n            returnKeyType=\"done\"\r\n          />\r\n          <View style={styles.buttonRow}>\r\n            <Button title=\"Abbrechen\" onPress={onClose} />\r\n            {(checkIn.trim() !== '' && checkOut.trim() !== '') && (\r\n              <Button title=\"Buchung erstellen\" disabled={!isFormValid || isSubmitting} onPress={handleCreate} />\r\n            )}\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      isVisible={isVisible}\r\n      onBackdropPress={onClose}\r\n      coverScreen\r\n      useNativeDriver={false}\r\n      style={styles.modalContainer}\r\n      propagateSwipe\r\n      avoidKeyboard\r\n    >\r\n      {Platform.OS === 'web' ? (\r\n        content\r\n      ) : (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n          {content}\r\n        </TouchableWithoutFeedback>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: { margin: 0, justifyContent: 'flex-end' },\r\n  scrollContainer: { flexGrow: 1, justifyContent: 'center' },\r\n  modalOverlay: { flexGrow: 1, backgroundColor: 'rgba(0,0,0,0.5)', padding: 16, justifyContent: 'center' },\r\n  modalContent: { backgroundColor: '#fff', borderRadius: 8, padding: 16, width: '85%', alignSelf: 'center' },\r\n  modalTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 12, textAlign: 'center' },\r\n  label: { marginTop: 8, fontWeight: '600', marginBottom: 4, fontSize: 16 },\r\n  input: { height: 40, fontSize: 16, paddingVertical: 8, paddingHorizontal: 10, borderWidth: 1, borderColor: '#ccc', borderRadius: 4, color: 'black', marginBottom: 12 },\r\n  radioGroup: { flexDirection: 'row', marginBottom: 12 },\r\n  radioOption: { paddingVertical: 4, paddingHorizontal: 8, borderWidth: 1, borderColor: '#ccc', borderRadius: 4, marginRight: 8 },\r\n  radioOptionSelected: { backgroundColor: '#007AFF', borderColor: '#007AFF' },\r\n  radioLabel: { fontSize: 16, color: 'black' },\r\n  radioLabelSelected: { color: '#fff' },\r\n  buttonRow: { flexDirection: 'row', justifyContent: 'space-around', marginTop: 12 },\r\n});\r\n\r\nexport default memo(BookingFormModal);\r\n","import React, { useState, useEffect, useCallback, memo } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  Platform,\r\n  ScrollView,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  Alert,\r\n} from 'react-native';\r\nimport Modal from 'react-native-modal';\r\nimport { supabase } from '../supabaseClient';\r\nimport ProgressBarAndroid from '@react-native-community/progress-bar-android';\r\nimport Clipboard from '@react-native-clipboard/clipboard';\r\nimport PushNotificationIOS from '@react-native-community/push-notification-ios';\r\n\r\nexport type BookingData = {\r\n  id: number;\r\n  zimmer_id: number;\r\n  guestName: string;\r\n  personCount: number;\r\n  checkIn: string;\r\n  checkOut: string;\r\n  status: string;\r\n  anzahlung: number;\r\n  verpflegung: string;\r\n  preisProPerson: number | null;\r\n  hund: boolean;\r\n  zusatz_preis: string;\r\n  tel_email: string;\r\n  roomNumber: string;\r\n  notiz?: string;\r\n};\r\n\r\ntype BookingEditModalProps = {\r\n  isVisible: boolean;\r\n  booking: BookingData;\r\n  onClose: () => void;\r\n  onUpdate: (updatedBooking: BookingData) => Promise<void>;\r\n  onDelete: (bookingId: number) => Promise<void>;\r\n  onRefresh?: () => void;\r\n};\r\n\r\n// Kleine Hilfsfunktionen als außerhalb der Komponente definieren\r\nfunction myAlert(title: string, msg: string) {\r\n  if (Platform.OS === 'web') {\r\n    window.alert(`${title}: ${msg}`);\r\n  } else {\r\n    Alert.alert(title, msg);\r\n  }\r\n}\r\n\r\nasync function myConfirm(question: string): Promise<boolean> {\r\n  if (Platform.OS === 'web') {\r\n    return Promise.resolve(window.confirm(question));\r\n  } else {\r\n    return new Promise<boolean>((resolve) => {\r\n      Alert.alert(\r\n        'Bestätigung',\r\n        question,\r\n        [\r\n          { text: 'Abbrechen', style: 'cancel', onPress: () => resolve(false) },\r\n          { text: 'OK', style: 'default', onPress: () => resolve(true) },\r\n        ],\r\n        { cancelable: true }\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n// RadioGroup als memoisierte Komponente\r\nconst RadioGroup: React.FC<{\r\n  options: { label: string; value: string }[];\r\n  selectedValue: string;\r\n  onChange: (value: string) => void;\r\n}> = memo(({ options, selectedValue, onChange }) => {\r\n  return (\r\n    <View style={styles.radioGroup}>\r\n      {options.map((opt) => {\r\n        const isSelected = opt.value === selectedValue;\r\n        return (\r\n          <TouchableWithoutFeedback key={opt.value} onPress={() => onChange(opt.value)}>\r\n            <View style={[styles.radioOption, isSelected && styles.radioOptionSelected]}>\r\n              <Text style={[styles.radioLabel, isSelected && styles.radioLabelSelected]}>\r\n                {opt.label}\r\n              </Text>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n});\r\n\r\nconst sharedInputStyle = {\r\n  height: 40,\r\n  fontSize: 16,\r\n  paddingVertical: 8,\r\n  paddingHorizontal: 10,\r\n  borderWidth: 1,\r\n  borderColor: '#ccc',\r\n  borderRadius: 4,\r\n  color: 'black',\r\n  marginBottom: 12,\r\n  width: '100%',\r\n};\r\n\r\nconst BookingEditModal: React.FC<BookingEditModalProps> = ({\r\n  isVisible,\r\n  booking,\r\n  onClose,\r\n  onUpdate,\r\n  onDelete,\r\n  onRefresh,\r\n}) => {\r\n  const [guestName, setGuestName] = useState(booking.guestName);\r\n  const [personCount, setPersonCount] = useState(booking.personCount.toString());\r\n  const [status, setStatus] = useState(booking.status);\r\n  const [anzahlung, setAnzahlung] = useState(booking.anzahlung.toString());\r\n  const [verpflegung, setVerpflegung] = useState(booking.verpflegung || 'Frühstück');\r\n  const [preisProPerson, setPreisProPerson] = useState(\r\n    booking.preisProPerson !== null ? booking.preisProPerson.toString() : ''\r\n  );\r\n  const [hund, setHund] = useState(booking.hund ? 'ja' : 'nein');\r\n  const [zusatzPreis, setZusatzPreis] = useState(booking.zusatz_preis);\r\n  const [telEmail, setTelEmail] = useState(booking.tel_email);\r\n  const [roomNumber, setRoomNumber] = useState(booking.roomNumber);\r\n  const [checkIn, setCheckIn] = useState(booking.checkIn);\r\n  const [checkOut, setCheckOut] = useState(booking.checkOut);\r\n  const [notiz, setNotiz] = useState(booking.notiz || '');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Aktualisiere die lokalen States, wenn sich das booking-Prop ändert\r\n  useEffect(() => {\r\n    setGuestName(booking.guestName);\r\n    setPersonCount(booking.personCount.toString());\r\n    setStatus(booking.status);\r\n    setAnzahlung(booking.anzahlung.toString());\r\n    setVerpflegung(booking.verpflegung || 'Frühstück');\r\n    setPreisProPerson(booking.preisProPerson !== null ? booking.preisProPerson.toString() : '');\r\n    setHund(booking.hund ? 'ja' : 'nein');\r\n    setZusatzPreis(booking.zusatz_preis);\r\n    setTelEmail(booking.tel_email);\r\n    setRoomNumber(booking.roomNumber);\r\n    setCheckIn(booking.checkIn);\r\n    setCheckOut(booking.checkOut);\r\n    setNotiz(booking.notiz || '');\r\n    setIsSubmitting(false);\r\n  }, [booking]);\r\n\r\n  const isFormValid =\r\n    guestName.trim().split(' ').length >= 2 &&\r\n    !isNaN(parseInt(personCount)) &&\r\n    parseInt(personCount) > 0 &&\r\n    checkIn.trim() !== '' &&\r\n    checkOut.trim() !== '' &&\r\n    roomNumber.trim() !== '';\r\n\r\n  // findRoomIdByNumber als useCallback\r\n  const findRoomIdByNumber = useCallback(async (numStr: string): Promise<number | null> => {\r\n    const { data, error } = await supabase\r\n      .from('zimmer')\r\n      .select('id')\r\n      .eq('nummer', numStr)\r\n      .single();\r\n    if (error || !data) {\r\n      myAlert('Fehler', 'Zimmer mit dieser Nummer wurde nicht gefunden.');\r\n      return null;\r\n    }\r\n    return data.id;\r\n  }, []);\r\n\r\n  const validateRoomAvailability = useCallback(async (\r\n    newRoomId: number,\r\n    newCheckIn: string,\r\n    newCheckOut: string\r\n  ): Promise<boolean> => {\r\n    const { data, error } = await supabase\r\n      .from('buchungen')\r\n      .select('id')\r\n      .eq('zimmer_id', newRoomId)\r\n      .not('id', 'eq', booking.id)\r\n      .filter('check_in', 'lt', newCheckOut)\r\n      .filter('check_out', 'gt', newCheckIn);\r\n    if (error) {\r\n      myAlert('Fehler', 'Fehler bei der Verfügbarkeitsprüfung.');\r\n      return false;\r\n    }\r\n    return data && data.length === 0;\r\n  }, [booking.id]);\r\n\r\n  const handleUpdate = useCallback(async () => {\r\n    if (isSubmitting) return;\r\n    const count = parseInt(personCount);\r\n    if (isNaN(count) || count <= 0) {\r\n      myAlert('Fehler', 'Bitte eine gültige Anzahl an Personen eingeben.');\r\n      return;\r\n    }\r\n    setIsSubmitting(true);\r\n    const parsedAnzahlung = parseFloat(anzahlung);\r\n    const parsedPreisProPerson =\r\n      preisProPerson.trim() === '' ? null : parseFloat(preisProPerson);\r\n    const newRoomNumber = roomNumber.trim();\r\n    if (!newRoomNumber) {\r\n      myAlert('Fehler', 'Bitte eine Zimmernummer angeben.');\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n    const newRoomId = await findRoomIdByNumber(newRoomNumber);\r\n    if (!newRoomId) {\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n    const available = await validateRoomAvailability(newRoomId, checkIn, checkOut);\r\n    if (!available) {\r\n      myAlert('Fehler', 'Das Zimmer ist im angegebenen Zeitraum nicht verfügbar.');\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n    const { error } = await supabase\r\n      .from('buchungen')\r\n      .update({\r\n        zimmer_id: newRoomId,\r\n        check_in: checkIn,\r\n        check_out: checkOut,\r\n        anzahl_personen: count,\r\n        preis_pro_person: parsedPreisProPerson ?? 0,\r\n        anzahlung: isNaN(parsedAnzahlung) ? 0 : parsedAnzahlung,\r\n        status: status,\r\n        verpflegung: verpflegung,\r\n        hund: hund === 'ja',\r\n        zusatz_preis: zusatzPreis,\r\n        tel_email: telEmail,\r\n        notiz,\r\n      })\r\n      .eq('id', booking.id);\r\n    if (error) {\r\n      myAlert('Fehler', error.message);\r\n    } else {\r\n      myAlert('Erfolg', 'Buchung aktualisiert!');\r\n      if (onRefresh) await onRefresh();\r\n      onClose();\r\n    }\r\n    setIsSubmitting(false);\r\n  }, [\r\n    isSubmitting,\r\n    personCount,\r\n    anzahlung,\r\n    preisProPerson,\r\n    roomNumber,\r\n    checkIn,\r\n    checkOut,\r\n    status,\r\n    verpflegung,\r\n    hund,\r\n    zusatzPreis,\r\n    telEmail,\r\n    notiz,\r\n    booking.id,\r\n    findRoomIdByNumber,\r\n    validateRoomAvailability,\r\n    onRefresh,\r\n    onClose,\r\n  ]);\r\n\r\n  const handleDelete = useCallback(async () => {\r\n    if (isSubmitting) return;\r\n    const confirmed = await (Platform.OS === 'web'\r\n      ? Promise.resolve(window.confirm('Möchtest du die Buchung wirklich löschen?'))\r\n      : myConfirm('Möchtest du die Buchung wirklich löschen?'));\r\n    if (confirmed) {\r\n      setIsSubmitting(true);\r\n      const { error } = await supabase.from('buchungen').delete().eq('id', booking.id);\r\n      if (error) {\r\n        myAlert('Fehler', error.message);\r\n      } else {\r\n        myAlert('Erfolg', 'Buchung gelöscht!');\r\n        if (onRefresh) await onRefresh();\r\n        onClose();\r\n      }\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [isSubmitting, booking.id, onRefresh, onClose]);\r\n\r\n  const content = (\r\n    <ScrollView\r\n      contentContainerStyle={styles.scrollContainer}\r\n      keyboardShouldPersistTaps=\"handled\"\r\n      keyboardDismissMode=\"on-drag\"\r\n    >\r\n      <View style={styles.modalOverlay}>\r\n        <View style={styles.modalContent}>\r\n          <Text style={styles.modalTitle}>Buchung bearbeiten</Text>\r\n          <Text>Aktueller Check-In: {booking.checkIn}</Text>\r\n          <Text>Aktueller Check-Out: {booking.checkOut}</Text>\r\n          <Text style={styles.label}>Zimmernummer:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"z. B. 101\"\r\n            value={roomNumber}\r\n            onChangeText={setRoomNumber}\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Neuer Check-In:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"YYYY-MM-DD\"\r\n            value={checkIn}\r\n            onChangeText={setCheckIn}\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Neuer Check-Out:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"YYYY-MM-DD\"\r\n            value={checkOut}\r\n            onChangeText={setCheckOut}\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Gastname:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"Vorname Nachname\"\r\n            value={guestName}\r\n            onChangeText={setGuestName}\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Anzahl Personen:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"z. B. 2\"\r\n            value={personCount}\r\n            onChangeText={setPersonCount}\r\n            keyboardType=\"numeric\"\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Status:</Text>\r\n          <RadioGroup\r\n            options={[\r\n              { label: 'Belegt', value: 'belegt' },\r\n              { label: 'Anzahlung', value: 'anzahlung' },\r\n              { label: 'Anz. bez', value: 'anzahlung_bezahlt' },\r\n            ]}\r\n            selectedValue={status}\r\n            onChange={setStatus}\r\n          />\r\n          <Text style={styles.label}>Anzahlung:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"0\"\r\n            value={anzahlung}\r\n            onChangeText={setAnzahlung}\r\n            keyboardType=\"numeric\"\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Verpflegung:</Text>\r\n          <RadioGroup\r\n            options={[\r\n              { label: 'Frühstück', value: 'Frühstück' },\r\n              { label: 'Halbpension', value: 'Halbpension' },\r\n            ]}\r\n            selectedValue={verpflegung}\r\n            onChange={setVerpflegung}\r\n          />\r\n          <Text style={styles.label}>Preis pro Person:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"z. B. 50\"\r\n            value={preisProPerson}\r\n            onChangeText={setPreisProPerson}\r\n            keyboardType=\"numeric\"\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Hund:</Text>\r\n          <RadioGroup\r\n            options={[\r\n              { label: 'Nein', value: 'nein' },\r\n              { label: 'Ja', value: 'ja' },\r\n            ]}\r\n            selectedValue={hund}\r\n            onChange={setHund}\r\n          />\r\n          <Text style={styles.label}>Zusatz Preis:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"z. B. 10\"\r\n            value={zusatzPreis}\r\n            onChangeText={setZusatzPreis}\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Tel.: / email:</Text>\r\n          <TextInput\r\n            style={sharedInputStyle}\r\n            placeholder=\"Telefon oder Email\"\r\n            value={telEmail}\r\n            onChangeText={setTelEmail}\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <Text style={styles.label}>Notiz:</Text>\r\n          <TextInput\r\n            style={[sharedInputStyle, { height: 80 }]}\r\n            placeholder=\"Notiz\"\r\n            value={notiz}\r\n            onChangeText={setNotiz}\r\n            multiline\r\n            blurOnSubmit\r\n            onSubmitEditing={Keyboard.dismiss}\r\n          />\r\n          <View style={styles.buttonRow}>\r\n            <Button title=\"Aktualisieren\" disabled={!isFormValid || isSubmitting} onPress={handleUpdate} />\r\n            <Button title=\"Löschen\" color=\"red\" onPress={handleDelete} disabled={isSubmitting} />\r\n          </View>\r\n          <View style={styles.modalButtons}>\r\n            <Button title=\"Schließen\" onPress={onClose} disabled={isSubmitting} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      isVisible={isVisible}\r\n      onBackdropPress={onClose}\r\n      coverScreen\r\n      useNativeDriver={false}\r\n      style={styles.modalContainer}\r\n      propagateSwipe\r\n      avoidKeyboard\r\n    >\r\n      {Platform.OS === 'web' ? (\r\n        content\r\n      ) : (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\r\n          {content}\r\n        </TouchableWithoutFeedback>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: { margin: 0, justifyContent: 'flex-end' },\r\n  scrollContainer: { flexGrow: 1, justifyContent: 'center' },\r\n  modalOverlay: { flexGrow: 1, backgroundColor: 'rgba(0,0,0,0.5)', padding: 16, justifyContent: 'center' },\r\n  modalContent: { backgroundColor: '#fff', borderRadius: 8, padding: 16, width: '85%', alignSelf: 'center' },\r\n  modalTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 12, textAlign: 'center' },\r\n  label: { marginTop: 8, fontWeight: '600', marginBottom: 4, fontSize: 16 },\r\n  radioGroup: { flexDirection: 'row', marginBottom: 12 },\r\n  radioOption: { paddingVertical: 4, paddingHorizontal: 8, borderWidth: 1, borderColor: '#ccc', borderRadius: 4, marginRight: 8 },\r\n  radioOptionSelected: { backgroundColor: '#007AFF', borderColor: '#007AFF' },\r\n  radioLabel: { fontSize: 16, color: 'black' },\r\n  radioLabelSelected: { color: '#fff' },\r\n  buttonRow: { flexDirection: 'row', justifyContent: 'space-around', marginTop: 12 },\r\n  modalButtons: { marginTop: 12, alignItems: 'center' },\r\n});\r\n\r\nexport default memo(BookingEditModal);\r\n","import React, {\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  Platform,\r\n} from 'react-native';\r\nimport { supabase } from '../supabaseClient';\r\nimport BookingFormModal from '../components/BookingFormModal';\r\nimport BookingEditModal, { BookingData } from '../components/BookingEditModal';\r\nimport Header from '../components/Header';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\n// --- TYPEN ---\r\ntype Zimmer = {\r\n  id: number;\r\n  nummer: string;\r\n  status: string;\r\n  created_at: string;\r\n};\r\n\r\nexport type Buchung = {\r\n  id: number;\r\n  zimmer_id: number;\r\n  gast_id: number | null;\r\n  check_in: string;\r\n  check_out: string;\r\n  anzahl_personen: number;\r\n  preis_pro_person: number;\r\n  anzahlung: number;\r\n  status: string; // 'belegt' | 'anzahlung' | 'anzahlung_bezahlt' | 'booking' | ...\r\n  verpflegung: string | null;\r\n  hund: boolean | null;\r\n  zusatz_preis: string;\r\n  tel_email: string;\r\n  notiz?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n};\r\n\r\ntype Gast = {\r\n  id: number;\r\n  vorname: string;\r\n  nachname: string;\r\n  // Weitere Felder ...\r\n};\r\n\r\nexport type Data = {\r\n  date: Date;\r\n  dayNumber: string;\r\n  monthYear: string;\r\n};\r\n\r\n// --- STYLES-KONSTANTEN ---\r\nconst DAY_WIDTH = 60;\r\nconst FIXED_WIDTH = 80;\r\nconst ROW_HEIGHT = 35;\r\n\r\n// --- HILFSFUNKTIONEN ---\r\nfunction parseDate(dateStr: string): Date {\r\n  return dateStr.includes('T')\r\n    ? new Date(dateStr)\r\n    : new Date(dateStr + 'T00:00:00');\r\n}\r\n\r\nfunction isSameDay(d1: Date, d2: Date): boolean {\r\n  return (\r\n    d1.getFullYear() === d2.getFullYear() &&\r\n    d1.getMonth() === d2.getMonth() &&\r\n    d1.getDate() === d2.getDate()\r\n  );\r\n}\r\n\r\nfunction findDayIndex(date: Date, days: DayCellData[]): number {\r\n  return days.findIndex((d) => isSameDay(d.date, date));\r\n}\r\n\r\nfunction formatDayCellData(date: Date): DayCellData {\r\n  const dayNumber = date.getDate().toString().padStart(2, '0');\r\n  const monthYear = date\r\n    .toLocaleDateString('de-DE', { month: '2-digit', year: 'numeric' })\r\n    .replace('.', '/');\r\n  return { date: new Date(date), dayNumber, monthYear };\r\n}\r\n\r\n/*\r\n  generateDaysArray:\r\n  - Startdatum: aktueller Tag minus \"pastDays\" (initial 10 Tage)\r\n  - Enddatum: aktueller Tag plus \"futureMonths\" (initial 6 Monate)\r\n  Die Funktion generiert ein Array von DayCellData zwischen Start und End.\r\n*/\r\nfunction generateDaysArray(pastDays: number, futureMonths: number): DayCellData[] {\r\n  const startDate = new Date();\r\n  startDate.setDate(startDate.getDate() - pastDays);\r\n  const endDate = new Date();\r\n  endDate.setMonth(endDate.getMonth() + futureMonths);\r\n\r\n  const result: DayCellData[] = [];\r\n  let current = new Date(startDate);\r\n  while (current <= endDate) {\r\n    result.push(formatDayCellData(current));\r\n    current.setDate(current.getDate() + 1);\r\n  }\r\n  return result;\r\n}\r\n\r\n// Prüft, ob das Intervall [start, end] für einen bestimmten Raum verfügbar ist.\r\n// Überschneidungen sind verboten, außer wenn das Ende exakt einem bestehenden Check‑in\r\n// oder der Start exakt einem bestehenden Check‑out entspricht.\r\nfunction isIntervalAvailableForRoom(\r\n  roomId: number | null,\r\n  start: Date,\r\n  end: Date,\r\n  bookings: Buchung[]\r\n): boolean {\r\n  if (!roomId) return false;\r\n  if (start.getTime() === end.getTime()) return true;\r\n  for (const booking of bookings) {\r\n    if (booking.zimmer_id !== roomId) continue;\r\n    const bookingStart = parseDate(booking.check_in);\r\n    const bookingEnd = parseDate(booking.check_out);\r\n    if (start < bookingEnd && end > bookingStart) {\r\n      if (\r\n        end.getTime() === bookingStart.getTime() ||\r\n        start.getTime() === bookingEnd.getTime()\r\n      ) {\r\n        continue;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// Liefert eine bestehende Buchung für einen Tag (Check‑out wird nicht blockiert)\r\nfunction getBuchungForDay(\r\n  dayData: DayCellData,\r\n  zimmerId: number,\r\n  buchungen: Buchung[]\r\n): Buchung | null {\r\n  return (\r\n    buchungen.find((b) => {\r\n      if (b.zimmer_id !== zimmerId) return false;\r\n      const start = parseDate(b.check_in);\r\n      const end = parseDate(b.check_out);\r\n      return dayData.date >= start && dayData.date <= end;\r\n    }) || null\r\n  );\r\n}\r\n\r\n// --- DayCell-Komponente ---\r\ntype DayCellProps = {\r\n  day: DayCellData;\r\n  isSelected: boolean;\r\n  existingBooking: Buchung | null;\r\n  onPress: () => void;\r\n};\r\n\r\nconst DayCell = React.memo<DayCellProps>(\r\n  ({ day, isSelected, existingBooking, onPress }) => {\r\n    return (\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.dayCell,\r\n          { width: DAY_WIDTH, height: ROW_HEIGHT },\r\n          existingBooking && { backgroundColor: 'transparent' },\r\n          isSelected && styles.selectedDayCell,\r\n        ]}\r\n        onPress={onPress}\r\n      >\r\n        <Text style={styles.dayCellText}>{day.dayNumber}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n);\r\n\r\n// --- Komponente für dynamische Buchungsblöcke ---\r\ntype BookingBlockRowProps = {\r\n  room: Zimmer;\r\n  bookings: Buchung[];\r\n  daysArray: DayCellData[];\r\n  gaeste: Gast[];\r\n  onPressBooking: (b: Buchung) => void;\r\n};\r\n\r\nconst BookingBlockRow = React.memo((props: BookingBlockRowProps) => {\r\n  const { room, bookings, daysArray, gaeste, onPressBooking } = props;\r\n\r\n  return (\r\n    <View style={styles.overlayContainer}>\r\n      {bookings.map((b) => {\r\n        const startDate = parseDate(b.check_in);\r\n        const endDate = parseDate(b.check_out);\r\n        const startIndex = findDayIndex(startDate, daysArray);\r\n        const endIndex = findDayIndex(endDate, daysArray);\r\n\r\n        if (startIndex < 0 || endIndex < 0) return null;\r\n\r\n        let blockLeft = startIndex * DAY_WIDTH;\r\n        let blockWidth = (endIndex - startIndex + 1) * DAY_WIDTH;\r\n\r\n        if (startIndex === endIndex) {\r\n          blockLeft += DAY_WIDTH / 2;\r\n          blockWidth = DAY_WIDTH / 2;\r\n        } else {\r\n          blockLeft += DAY_WIDTH / 2;\r\n          blockWidth -= DAY_WIDTH;\r\n        }\r\n\r\n        const guest = gaeste.find((g) => g.id === b.gast_id);\r\n        const guestName = guest ? `${guest.vorname} ${guest.nachname}` : 'Unbekannt';\r\n\r\n        let verpflegungAbbr = '';\r\n        if (b.verpflegung === 'Frühstück') verpflegungAbbr = 'B&B';\r\n        else if (b.verpflegung === 'Halbpension') verpflegungAbbr = 'HP';\r\n        else if (b.verpflegung) verpflegungAbbr = b.verpflegung;\r\n\r\n        const label = `${guestName} (${b.anzahl_personen}P) ${verpflegungAbbr}`;\r\n\r\n        let blockColor = '#ccffcc';\r\n        if (b.status === 'belegt') blockColor = '#ffcccc';\r\n        else if (b.status === 'anzahlung') blockColor = '#ffffcc';\r\n        else if (b.status === 'booking') blockColor = '#ccccff';\r\n\r\n        return (\r\n          <TouchableOpacity\r\n            key={b.id}\r\n            activeOpacity={0.8}\r\n            onPress={() => onPressBooking(b)}\r\n          >\r\n            <View\r\n              style={[\r\n                styles.bookingBlock,\r\n                {\r\n                  left: blockLeft,\r\n                  width: blockWidth,\r\n                  backgroundColor: blockColor,\r\n                },\r\n              ]}\r\n            >\r\n              <Text style={styles.bookingBlockText} numberOfLines={2}>\r\n                {label}\r\n              </Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n});\r\n\r\n// --- HAUPTKOMPONENTE ---\r\nexport default function CalendarScreen1({\r\n  buchungen,\r\n  onRefresh,\r\n}: {\r\n  buchungen: Buchung[];\r\n  onRefresh: () => void;\r\n}) {\r\n  const [localBuchungen, setLocalBuchungen] = useState<Buchung[]>(buchungen);\r\n\r\n  // Initial: 10 Tage in der Vergangenheit, 6 Monate in der Zukunft\r\n  const [pastDays, setPastDays] = useState(10);\r\n  const [futureMonths, setFutureMonths] = useState(6);\r\n\r\n  const [zimmer, setZimmer] = useState<Zimmer[]>([]);\r\n  const [gaeste, setGaeste] = useState<Gast[]>([]);\r\n\r\n  const [selectedCheckIn, setSelectedCheckIn] = useState<DayCellData | null>(null);\r\n  const [selectedCheckOut, setSelectedCheckOut] = useState<DayCellData | null>(null);\r\n  const [selectedRoomId, setSelectedRoomId] = useState<number | null>(null);\r\n\r\n  // Modals\r\n  const [isBookingModalVisible, setBookingModalVisible] = useState(false);\r\n  const [isBookingEditModalVisible, setBookingEditModalVisible] = useState(false);\r\n  const [selectedBooking, setSelectedBooking] = useState<BookingData | null>(null);\r\n\r\n  // Eingabe\r\n  const [guestInput, setGuestInput] = useState('');\r\n  const [personCountInput, setPersonCountInput] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const [displayedDate, setDisplayedDate] = useState(new Date());\r\n  const scrollViewRef = useRef<ScrollView>(null);\r\n  const lastRefreshTimeRef = useRef<number>(0);\r\n\r\n  const monthAbbreviations = ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'];\r\n\r\n  // Erzeuge Days-Array basierend auf pastDays und futureMonths\r\n  const daysArray = useMemo(() => {\r\n    return generateDaysArray(pastDays, futureMonths);\r\n  }, [pastDays, futureMonths]);\r\n\r\n  // Zimmer / Gäste laden\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      const { data: zimmerData } = await supabase.from('zimmer').select('*');\r\n      if (zimmerData) setZimmer(zimmerData as Zimmer[]);\r\n      const { data: gaesteData } = await supabase.from('gaeste').select('*');\r\n      if (gaesteData) setGaeste(gaesteData as Gast[]);\r\n    } catch (error) {\r\n      console.error('Fehler beim Laden von Zimmern/Gästen:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 120000);\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData]);\r\n\r\n  // Buchungen aktualisieren\r\n  useEffect(() => {\r\n    setLocalBuchungen(buchungen);\r\n  }, [buchungen]);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      const now = Date.now();\r\n      if (now - lastRefreshTimeRef.current > 30000) {\r\n        onRefresh();\r\n        lastRefreshTimeRef.current = now;\r\n      }\r\n    }, [onRefresh])\r\n  );\r\n\r\n  // Scroll -> Datum in Mitte (funktioniert weiterhin beim manuellen Scrollen)\r\n  const handleScroll = useCallback(\r\n    (event: any) => {\r\n      const xOffset = event.nativeEvent.contentOffset.x;\r\n      const visibleWidth = event.nativeEvent.layoutMeasurement.width;\r\n      const centerX = xOffset + visibleWidth / 2;\r\n      const index = Math.floor(centerX / DAY_WIDTH);\r\n      if (index >= 0 && index < daysArray.length) {\r\n        const newDate = daysArray[index].date;\r\n        if (\r\n          newDate.getMonth() !== displayedDate.getMonth() ||\r\n          newDate.getFullYear() !== displayedDate.getFullYear()\r\n        ) {\r\n          setDisplayedDate(newDate);\r\n        }\r\n      }\r\n    },\r\n    [daysArray, displayedDate]\r\n  );\r\n\r\n  const scrollToMonth = useCallback(\r\n    (targetDate: Date) => {\r\n      if (daysArray.length === 0 || !scrollViewRef.current) return;\r\n      const targetIndex = daysArray.findIndex(\r\n        (d) =>\r\n          d.date.getFullYear() === targetDate.getFullYear() &&\r\n          d.date.getMonth() === targetDate.getMonth()\r\n      );\r\n      if (targetIndex !== -1) {\r\n        const offsetX = FIXED_WIDTH + targetIndex * DAY_WIDTH;\r\n        scrollViewRef.current.scrollTo({ x: offsetX, animated: true });\r\n      }\r\n    },\r\n    [daysArray]\r\n  );\r\n\r\n  const handleMonthButtonPress = useCallback(\r\n    (monthIndex: number) => {\r\n      const currentYear = displayedDate.getFullYear();\r\n      const newDate = new Date(currentYear, monthIndex, 1);\r\n      setDisplayedDate(newDate);\r\n      scrollToMonth(newDate);\r\n    },\r\n    [displayedDate, scrollToMonth]\r\n  );\r\n\r\n  // Erweiterungsfunktionen:\r\n  // Für die Vergangenheit: Bei jedem Klick werden ca. 3 Monate (90 Tage) zusätzlich angezeigt.\r\n  const addBackwardExtension = useCallback(() => setPastDays(prev => prev + 90), []);\r\n  // Für die Zukunft: Bei jedem Klick werden 3 Monate hinzugefügt.\r\n  const addForwardExtension = useCallback(() => setFutureMonths(prev => prev + 3), []);\r\n\r\n  // Angepasste Logik beim Auswählen der Tageszellen:\r\n  const handleDayPress = useCallback(\r\n    (day: DayCellData, roomId: number) => {\r\n      // Falls noch kein Check‑in gesetzt ist, müssen wir sicherstellen,\r\n      // dass der Tag als Check‑in frei ist (d.h. keine Buchung mit Check‑in an diesem Tag).\r\n      if (!selectedCheckIn) {\r\n        if (!isIntervalAvailableForRoom(roomId, day.date, day.date, localBuchungen)) {\r\n          return;\r\n        }\r\n        setSelectedRoomId(roomId);\r\n        setSelectedCheckIn(day);\r\n        setSelectedCheckOut(day);\r\n        return;\r\n      }\r\n      // Falls ein anderer Raum ausgewählt wurde, setzen wir neu.\r\n      if (selectedRoomId !== roomId) {\r\n        if (!isIntervalAvailableForRoom(roomId, day.date, day.date, localBuchungen)) {\r\n          return;\r\n        }\r\n        setSelectedRoomId(roomId);\r\n        setSelectedCheckIn(day);\r\n        setSelectedCheckOut(day);\r\n        return;\r\n      }\r\n      // Wenn der geklickte Tag exakt gleich wie der bereits gewählte Check‑in ist,\r\n      // interpretieren wir den Klick als Versuch, den Check‑out zu setzen.\r\n      if (isSameDay(day.date, selectedCheckIn.date)) {\r\n        setSelectedCheckOut(day);\r\n        return;\r\n      }\r\n      // Wenn der geklickte Tag nach dem Check‑in liegt, prüfen wir das Intervall.\r\n      if (day.date >= selectedCheckIn.date) {\r\n  const isAvailable = isIntervalAvailableForRoom(roomId, selectedCheckIn.date, day.date, localBuchungen);\r\n  const bookingAtDay = getBuchungForDay(day, roomId, localBuchungen);\r\n\r\n  if (isAvailable || (bookingAtDay && isSameDay(day.date, parseDate(bookingAtDay.check_in)))) {\r\n    setSelectedCheckOut(day);\r\n    return;\r\n  } else {\r\n    Alert.alert(\"Das Intervall ist nicht verfügbar.\");\r\n    return;\r\n  }\r\n      }\r\n      // Wenn ein Tag vor dem aktuellen Check‑in gewählt wird, setzen wir neu.\r\n      setSelectedCheckIn(day);\r\n      setSelectedCheckOut(day);\r\n    },\r\n    [selectedCheckIn, localBuchungen, selectedRoomId]\r\n  );\r\n\r\n  const handleSearch = useCallback(() => {\r\n    if (!searchQuery.trim()) return;\r\n    const lowerQuery = searchQuery.toLowerCase();\r\n    const matchingBooking = localBuchungen.find((b) => {\r\n      const guest = gaeste.find((g) => g.id === b.gast_id);\r\n      if (!guest) return false;\r\n      const fullName = `${guest.vorname} ${guest.nachname}`.toLowerCase();\r\n      return fullName.includes(lowerQuery);\r\n    });\r\n    if (matchingBooking) {\r\n      const checkInDate = parseDate(matchingBooking.check_in);\r\n      const index = findDayIndex(checkInDate, daysArray);\r\n      if (index !== -1 && scrollViewRef.current) {\r\n        const offsetX = FIXED_WIDTH + index * DAY_WIDTH;\r\n        scrollViewRef.current.scrollTo({ x: offsetX, animated: true });\r\n      }\r\n    }\r\n  }, [searchQuery, localBuchungen, gaeste, daysArray]);\r\n\r\n  const openBookingModal = useCallback(() => {\r\n    if (!selectedCheckIn || !selectedCheckOut || selectedRoomId === null) {\r\n      Alert.alert('Bitte Check‑In und Check‑Out auswählen.');\r\n      return;\r\n    }\r\n    setBookingModalVisible(true);\r\n  }, [selectedCheckIn, selectedCheckOut, selectedRoomId]);\r\n\r\n  const handleBookingPress = useCallback(\r\n    (b: Buchung) => {\r\n      const guest = gaeste.find((g) => g.id === b.gast_id);\r\n      const bookingData: BookingData = {\r\n        id: b.id,\r\n        zimmer_id: b.zimmer_id,\r\n        guestName: guest ? `${guest.vorname} ${guest.nachname}` : 'Unbekannt',\r\n        personCount: b.anzahl_personen,\r\n        checkIn: b.check_in,\r\n        checkOut: b.check_out,\r\n        status: b.status,\r\n        anzahlung: b.anzahlung,\r\n        verpflegung: b.verpflegung || '',\r\n        preisProPerson: b.preis_pro_person,\r\n        hund: b.hund || false,\r\n        zusatz_preis: b.zusatz_preis,\r\n        tel_email: b.tel_email,\r\n        notiz: b.notiz || '',\r\n        roomNumber: zimmer.find((z) => z.id === b.zimmer_id)?.nummer || '',\r\n      };\r\n      setSelectedBooking(bookingData);\r\n      setBookingEditModalVisible(true);\r\n    },\r\n    [gaeste, zimmer]\r\n  );\r\n\r\n  const handleBookingSubmit = useCallback(\r\n    async (data: {\r\n      guestName: string;\r\n      personCount: number;\r\n      status: string;\r\n      anzahlung: number;\r\n      verpflegung: string;\r\n      preisProPerson: number | null;\r\n      hund: boolean;\r\n      zusatzPreis: string;\r\n      notiz: string;\r\n      tel_email: string;\r\n    }) => {\r\n      if (!selectedCheckIn || !selectedCheckOut || selectedRoomId === null) {\r\n        Alert.alert('Fehler', 'Bitte Check‑In, Check‑Out und Zimmer auswählen.');\r\n        return;\r\n      }\r\n      const checkInDate = selectedCheckIn.date.toISOString().split('T')[0];\r\n      const checkOutDate = selectedCheckOut.date.toISOString().split('T')[0];\r\n\r\n      const nameParts = data.guestName.trim().split(' ');\r\n      if (nameParts.length < 2) {\r\n        Alert.alert('Fehler', 'Bitte Vor‑ und Nachname eingeben.');\r\n        return;\r\n      }\r\n      let guestId: number | null = null;\r\n      const { data: existingGuest } = await supabase\r\n        .from('gaeste')\r\n        .select('id')\r\n        .eq('vorname', nameParts[0])\r\n        .eq('nachname', nameParts[1]);\r\n      if (existingGuest && existingGuest.length > 0) {\r\n        guestId = existingGuest[0].id;\r\n      } else {\r\n        const { data: newGuest } = await supabase\r\n          .from('gaeste')\r\n          .insert([{ vorname: nameParts[0], nachname: nameParts[1] }])\r\n          .select('*')\r\n          .single();\r\n        if (!newGuest) {\r\n          Alert.alert('Fehler', 'Gast konnte nicht erstellt werden.');\r\n          return;\r\n        }\r\n        guestId = newGuest.id;\r\n      }\r\n\r\n      const { error } = await supabase.from('buchungen').insert([\r\n        {\r\n          zimmer_id: selectedRoomId,\r\n          gast_id: guestId,\r\n          check_in: checkInDate,\r\n          check_out: checkOutDate,\r\n          anzahl_personen: data.personCount,\r\n          preis_pro_person: data.preisProPerson ?? 0,\r\n          anzahlung: data.anzahlung,\r\n          status: data.status,\r\n          verpflegung: data.verpflegung,\r\n          hund: data.hund,\r\n          zusatz_preis: data.zusatzPreis,\r\n          tel_email: data.tel_email,\r\n          notiz: data.notiz,\r\n        },\r\n      ]);\r\n      if (error) {\r\n        Alert.alert('Fehler', error.message);\r\n      } else {\r\n        Alert.alert('Erfolg', 'Buchung erstellt!');\r\n        setSelectedRoomId(null);\r\n        setSelectedCheckIn(null);\r\n        setSelectedCheckOut(null);\r\n        await onRefresh();\r\n        await fetchData(); // Gästeliste sofort aktualisieren\r\n      }\r\n    },\r\n    [selectedCheckIn, selectedCheckOut, selectedRoomId, onRefresh, fetchData]\r\n  );\r\n\r\n  const handleBookingUpdate = useCallback(\r\n    async (updatedBooking: BookingData) => {\r\n      await onRefresh();\r\n      await fetchData(); // Gästeliste auch nach Aktualisierungen neu laden\r\n      setBookingEditModalVisible(false);\r\n      setSelectedBooking(null);\r\n    },\r\n    [onRefresh, fetchData]\r\n  );\r\n\r\n  const handleBookingDelete = useCallback(\r\n    async (bookingId: number) => {\r\n      await onRefresh();\r\n      await fetchData();\r\n      setBookingEditModalVisible(false);\r\n      setSelectedBooking(null);\r\n    },\r\n    [onRefresh, fetchData]\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header />\r\n\r\n      <Text style={styles.title}>Zimmer-Kalender</Text>\r\n\r\n      {/* Obere Monats-/Jahresanzeige */}\r\n      <View style={styles.monthYearContainer}>\r\n        <View style={{ flex: 1, alignItems: 'center' }}>\r\n          <Text style={styles.monthYearText}>\r\n            {displayedDate.toLocaleDateString('de-DE', { month: 'long', year: 'numeric' })}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Erweiterungsbuttons für Vergangenheit und Zukunft */}\r\n      <View style={styles.extensionButtonsContainer}>\r\n        <Button title=\"-3 Monate\" onPress={addBackwardExtension} />\r\n        <Button title=\"+3 Monate\" onPress={addForwardExtension} />\r\n      </View>\r\n\r\n      <View style={styles.tableContainer}>\r\n        {/* Fixe Spalte: Zimmer */}\r\n        <View style={styles.fixedColumn}>\r\n          <View style={[styles.headerCell, styles.leftHeaderCell]}>\r\n            <Text style={styles.headerText}>Zimmer</Text>\r\n          </View>\r\n          {zimmer.map((room) => (\r\n            <View key={room.id} style={styles.roomCell}>\r\n              <Text style={styles.roomText}>Z. {room.nummer}</Text>\r\n            </View>\r\n          ))}\r\n        </View>\r\n\r\n        {/* Horizontal scrollbarer Bereich */}\r\n        <ScrollView\r\n          horizontal\r\n          style={styles.horizontalScroll}\r\n          ref={scrollViewRef}\r\n          onScroll={handleScroll}\r\n          scrollEventThrottle={16}\r\n        >\r\n          <View>\r\n            {/* Tage-Header */}\r\n            <View style={styles.headerRow}>\r\n              {daysArray.map((day) => {\r\n                const isToday = isSameDay(day.date, new Date());\r\n                const weekday = day.date.toLocaleDateString('de-DE', { weekday: 'short' });\r\n                const weekend = weekday.startsWith('Sa') || weekday.startsWith('So');\r\n                return (\r\n                  <View\r\n                    key={day.date.toISOString()}\r\n                    style={[\r\n                      styles.headerCell,\r\n                      { width: DAY_WIDTH },\r\n                      isToday && styles.todayHeader,\r\n                      weekend && styles.weekendHeader,\r\n                    ]}\r\n                  >\r\n                    <Text style={styles.headerSmallText}>\r\n                      {weekday} {day.monthYear}\r\n                    </Text>\r\n                    <Text style={styles.headerText}>{day.dayNumber}</Text>\r\n                  </View>\r\n                );\r\n              })}\r\n            </View>\r\n\r\n            {/* Raumzeilen */}\r\n            {zimmer.map((room) => (\r\n              <View key={room.id} style={{ position: 'relative', height: ROW_HEIGHT }}>\r\n                <View style={styles.roomRow}>\r\n                  {daysArray.map((day) => {\r\n                    const isSelected =\r\n                      selectedRoomId === room.id &&\r\n                      ((selectedCheckIn && isSameDay(day.date, selectedCheckIn.date)) ||\r\n                        (selectedCheckOut && isSameDay(day.date, selectedCheckOut.date)));\r\n                    const existingBooking = getBuchungForDay(day, room.id, localBuchungen);\r\n                    return (\r\n                      <DayCell\r\n                        key={day.date.toISOString()}\r\n                        day={day}\r\n                        isSelected={isSelected}\r\n                        existingBooking={existingBooking}\r\n                        onPress={() => {\r\n  const existingCheckInDate = existingBooking ? parseDate(existingBooking.check_in) : null;\r\n\r\n  if (!selectedCheckIn) {\r\n    // Kein Check-In gesetzt: Nur komplett freie Zellen auswählbar\r\n    if (!existingBooking) {\r\n      handleDayPress(day, room.id);\r\n    }\r\n  } else {\r\n    // Check-In bereits gesetzt:\r\n    // Check-Out darf frei sein ODER exakt am Check-In einer bestehenden Buchung liegen\r\n    if (!existingBooking || isSameDay(day.date, existingCheckInDate)) {\r\n      handleDayPress(day, room.id);\r\n    }\r\n  }\r\n}}\r\n                      />\r\n                    );\r\n                  })}\r\n                </View>\r\n                {/* Buchungsblöcke */}\r\n                <BookingBlockRow\r\n                  room={room}\r\n                  bookings={localBuchungen.filter((b) => b.zimmer_id === room.id)}\r\n                  daysArray={daysArray}\r\n                  gaeste={gaeste}\r\n                  onPressBooking={handleBookingPress}\r\n                />\r\n              </View>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View style={styles.monthButtonsContainer}>\r\n        {monthAbbreviations.map((abbr, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            style={styles.monthButton}\r\n            onPress={() => handleMonthButtonPress(index)}\r\n          >\r\n            <Text style={styles.monthButtonText}>{abbr}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Nach Gastname suchen...\"\r\n          value={searchQuery}\r\n          onChangeText={setSearchQuery}\r\n        />\r\n        <Button title=\"Suchen\" onPress={handleSearch} />\r\n      </View>\r\n\r\n      {selectedCheckIn && selectedCheckOut && (\r\n        <TouchableOpacity style={styles.bookingButton} onPress={openBookingModal}>\r\n          <Text style={styles.bookingButtonText}>Buchungsformular öffnen</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      <BookingFormModal\r\n        isVisible={isBookingModalVisible}\r\n        checkIn={selectedCheckIn ? selectedCheckIn.date.toISOString().split('T')[0] : ''}\r\n        checkOut={selectedCheckOut ? selectedCheckOut.date.toISOString().split('T')[0] : ''}\r\n        onClose={() => setBookingModalVisible(false)}\r\n        onSubmit={handleBookingSubmit}\r\n        initialGuestName={guestInput}\r\n        initialPersonCount={personCountInput ? parseInt(personCountInput) : 0}\r\n        onRefresh={onRefresh}\r\n        selectedRoomId={selectedRoomId || undefined}\r\n      />\r\n\r\n      {selectedBooking && (\r\n        <BookingEditModal\r\n          isVisible={isBookingEditModalVisible}\r\n          booking={selectedBooking}\r\n          onClose={() => {\r\n            setBookingEditModalVisible(false);\r\n            setSelectedBooking(null);\r\n          }}\r\n          onUpdate={handleBookingUpdate}\r\n          onDelete={handleBookingDelete}\r\n          onRefresh={onRefresh}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\n// --- STYLES ---\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    paddingTop: 40,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  monthYearContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n  monthYearText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  extensionButtonsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginBottom: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n  tableContainer: {\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n  },\r\n  fixedColumn: {\r\n    width: FIXED_WIDTH,\r\n  },\r\n  horizontalScroll: {\r\n    flex: 1,\r\n  },\r\n  headerRow: {\r\n    flexDirection: 'row',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  headerCell: {\r\n    backgroundColor: '#eee',\r\n    borderRightWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: ROW_HEIGHT,\r\n  },\r\n  headerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 12,\r\n  },\r\n  headerSmallText: {\r\n    fontSize: 10,\r\n    color: '#555',\r\n  },\r\n  leftHeaderCell: {\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  todayHeader: {\r\n    backgroundColor: '#b3e6ff',\r\n  },\r\n  weekendHeader: {\r\n    backgroundColor: '#cccccc',\r\n  },\r\n  roomRow: {\r\n    flexDirection: 'row',\r\n  },\r\n  roomCell: {\r\n    backgroundColor: '#fafafa',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: ROW_HEIGHT,\r\n    width: FIXED_WIDTH,\r\n  },\r\n  roomText: {\r\n    fontSize: 12,\r\n  },\r\n  dayCell: {\r\n    borderRightWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  selectedDayCell: {\r\n    backgroundColor: '#d0f0ff',\r\n  },\r\n  dayCellText: {\r\n    fontSize: 10,\r\n    color: '#333',\r\n  },\r\n  overlayContainer: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    pointerEvents: 'box-none',\r\n  },\r\n  bookingBlock: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    height: ROW_HEIGHT,\r\n    borderWidth: 1,\r\n    borderColor: '#99cc99',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 2,\r\n  },\r\n  bookingBlockText: {\r\n    fontSize: 9,\r\n    fontWeight: '600',\r\n    color: '#333',\r\n    textAlign: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  monthButtonsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginVertical: 8,\r\n  },\r\n  monthButton: {\r\n    backgroundColor: '#eee',\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 4,\r\n  },\r\n  monthButtonText: {\r\n    fontSize: 12,\r\n    fontWeight: '500',\r\n  },\r\n  bookingButton: {\r\n    backgroundColor: '#007AFF',\r\n    padding: 12,\r\n    margin: 16,\r\n    borderRadius: 6,\r\n    alignItems: 'center',\r\n  },\r\n  bookingButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    padding: 8,\r\n    borderRadius: 4,\r\n    marginRight: 8,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Alert,\r\n} from 'react-native';\r\nimport { supabase } from '../supabaseClient';\r\nimport Header from '../components/Header';\r\n\r\ntype Buchung = {\r\n  id: number;\r\n  zimmer_id: number;\r\n  gast_id: number | null;\r\n  check_in: string;\r\n  check_out: string;\r\n  anzahlung: number;\r\n  status: string;\r\n};\r\n\r\ntype Gast = {\r\n  id: number;\r\n  vorname: string;\r\n  nachname: string;\r\n};\r\n\r\ntype AnzahlungenScreenProps = {\r\n  onRefresh?: () => void;\r\n};\r\n\r\nconst AnzahlungenScreen: React.FC<AnzahlungenScreenProps> = ({ onRefresh }) => {\r\n  const [buchungen, setBuchungen] = useState<Buchung[]>([]);\r\n  const [gaeste, setGaeste] = useState<Gast[]>([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n\r\n      const { data: buchungenData, error: buchungenError } = await supabase\r\n        .from('buchungen')\r\n        .select('*')\r\n        .or('status.eq.anzahlung,status.eq.anzahlung_bezahlt')\r\n        .gte('check_in', today)\r\n        .order('check_in', { ascending: true });\r\n\r\n      if (buchungenError) throw buchungenError;\r\n      if (buchungenData) setBuchungen(buchungenData);\r\n\r\n      const { data: gaesteData, error: gaesteError } = await supabase\r\n        .from('gaeste')\r\n        .select('*');\r\n\r\n      if (gaesteError) throw gaesteError;\r\n      if (gaesteData) setGaeste(gaesteData);\r\n    } catch (error) {\r\n      console.error('Fehler beim Laden der Daten:', error);\r\n      Alert.alert('Fehler', 'Daten konnten nicht geladen werden.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    // Alle 2 Minuten Daten abrufen\r\n    const interval = setInterval(fetchData, 120000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Optionale externe onRefresh-Aktion (falls übergeben)\r\n  useEffect(() => {\r\n    if (onRefresh) {\r\n      onRefresh();\r\n    }\r\n  }, [onRefresh]);\r\n\r\n  const updateStatus = async (buchungId: number, neuerStatus: 'anzahlung' | 'anzahlung_bezahlt') => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('buchungen')\r\n        .update({ status: neuerStatus })\r\n        .eq('id', buchungId);\r\n\r\n      if (error) throw error;\r\n\r\n      Alert.alert('Erfolg', 'Status erfolgreich geändert.');\r\n      // Nach Statusänderung Daten neu laden\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error('Fehler beim Aktualisieren des Status:', error);\r\n      Alert.alert('Fehler', 'Status konnte nicht geändert werden.');\r\n    }\r\n  };\r\n\r\n  const filteredBuchungen = searchQuery\r\n    ? buchungen.filter(b => {\r\n        const gast = gaeste.find(g => g.id === b.gast_id);\r\n        if (!gast) return false;\r\n        const fullName = `${gast.vorname} ${gast.nachname}`.toLowerCase();\r\n        return fullName.includes(searchQuery.toLowerCase());\r\n      })\r\n    : buchungen;\r\n\r\n  const offeneAnzahlungenSumme = filteredBuchungen\r\n    .filter(b => b.status === 'anzahlung' && new Date(b.check_in) > new Date())\r\n    .reduce((sum, b) => sum + b.anzahlung, 0);\r\n\r\n  const bezahlteAnzahlungenSumme = filteredBuchungen\r\n    .filter(b => b.status === 'anzahlung_bezahlt' && new Date(b.check_out) > new Date())\r\n    .reduce((sum, b) => sum + b.anzahlung, 0);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Header />\r\n      <Text style={styles.title}>Anzahlungen</Text>\r\n\r\n      <TextInput\r\n        style={styles.searchInput}\r\n        placeholder=\"Gäste suchen...\"\r\n        value={searchQuery}\r\n        onChangeText={setSearchQuery}\r\n      />\r\n\r\n      <Text style={styles.sectionTitle}>\r\n        Offene Anzahlungen ({offeneAnzahlungenSumme} €)\r\n      </Text>\r\n      {filteredBuchungen\r\n        .filter(b => b.status === 'anzahlung')\r\n        .map(b => {\r\n          const gast = gaeste.find(g => g.id === b.gast_id);\r\n          return (\r\n            <View key={b.id} style={styles.card}>\r\n              <Text>\r\n                <Text style={styles.boldText}>\r\n                  {gast ? `${gast.vorname} ${gast.nachname}` : 'Unbekannter Gast'}\r\n                </Text>\r\n                {' - '}\r\n                {b.check_in} bis {b.check_out}\r\n              </Text>\r\n              <Text>Anzahlung: {b.anzahlung} €</Text>\r\n\r\n              <View style={styles.radioGroup}>\r\n                <TouchableOpacity\r\n                  style={[\r\n                    styles.radioButton,\r\n                    b.status === 'anzahlung' && styles.radioButtonRed,\r\n                  ]}\r\n                  onPress={() => updateStatus(b.id, 'anzahlung')}\r\n                >\r\n                  <Text style={styles.radioText}>Nicht bezahlt</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={[\r\n                    styles.radioButton,\r\n                    b.status === 'anzahlung_bezahlt' && styles.radioButtonGreen,\r\n                  ]}\r\n                  onPress={() => updateStatus(b.id, 'anzahlung_bezahlt')}\r\n                >\r\n                  <Text style={styles.radioText}>Bezahlt</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n\r\n      <Text style={styles.sectionTitle}>\r\n        Bezahlte Anzahlungen ({bezahlteAnzahlungenSumme} €)\r\n      </Text>\r\n      {filteredBuchungen\r\n        .filter(b => b.status === 'anzahlung_bezahlt')\r\n        .map(b => {\r\n          const gast = gaeste.find(g => g.id === b.gast_id);\r\n          return (\r\n            <View key={b.id} style={styles.card}>\r\n              <Text>\r\n                <Text style={styles.boldText}>\r\n                  {gast ? `${gast.vorname} ${gast.nachname}` : 'Unbekannter Gast'}\r\n                </Text>\r\n                {' - '}\r\n                {b.check_in} bis {b.check_out}\r\n              </Text>\r\n              <Text>Anzahlung: {b.anzahlung} €</Text>\r\n\r\n              <View style={styles.radioGroup}>\r\n                <TouchableOpacity\r\n                  style={[\r\n                    styles.radioButton,\r\n                    b.status === 'anzahlung' && styles.radioButtonRed,\r\n                  ]}\r\n                  onPress={() => updateStatus(b.id, 'anzahlung')}\r\n                >\r\n                  <Text style={styles.radioText}>Nicht bezahlt</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={[\r\n                    styles.radioButton,\r\n                    b.status === 'anzahlung_bezahlt' && styles.radioButtonGreen,\r\n                  ]}\r\n                  onPress={() => updateStatus(b.id, 'anzahlung_bezahlt')}\r\n                >\r\n                  <Text style={styles.radioText}>Bezahlt</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 16, backgroundColor: '#fff' },\r\n  title: { fontSize: 24, fontWeight: 'bold', textAlign: 'center', marginBottom: 16 },\r\n  searchInput: { borderWidth: 1, borderColor: '#ccc', padding: 8, marginBottom: 16, borderRadius: 4 },\r\n  sectionTitle: { fontSize: 20, fontWeight: 'bold', marginTop: 16, marginBottom: 8 },\r\n  card: { backgroundColor: '#f9f9f9', padding: 12, borderRadius: 6, marginBottom: 12 },\r\n  boldText: { fontWeight: 'bold' },\r\n  radioGroup: { flexDirection: 'row', marginTop: 8 },\r\n  radioButton: {\r\n    padding: 8,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 4,\r\n    marginRight: 8,\r\n  },\r\n  radioButtonRed: { backgroundColor: '#FF5733', borderColor: '#FF5733' },\r\n  radioButtonGreen: { backgroundColor: '#4CAF50', borderColor: '#4CAF50' },\r\n  radioText: { fontSize: 16, color: '#000' },\r\n});\r\n\r\nexport default AnzahlungenScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, Button, Alert, StyleSheet, FlatList, Modal } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { supabase } from '../supabaseClient';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst EinstellungenScreen = () => {\r\n  const [ferienStart, setFerienStart] = useState('');\r\n  const [ferienEnde, setFerienEnde] = useState('');\r\n  const [ferienListe, setFerienListe] = useState([]);\r\n  const [editModalVisible, setEditModalVisible] = useState(false);\r\n  const [currentEdit, setCurrentEdit] = useState(null); // {check_in, check_out}\r\n  const [newStart, setNewStart] = useState('');\r\n  const [newEnd, setNewEnd] = useState('');\r\n  const navigation = useNavigation();\r\n\r\n  // Ferien aus Supabase abrufen: Nur Ferien, deren check_out-Datum nach heute liegt\r\n  const fetchFerien = async () => {\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      const { data, error } = await supabase\r\n        .from('buchungen')\r\n        .select('check_in, check_out')\r\n        .eq('status', 'Ferien')\r\n        .gt('check_out', today);\r\n      if (error) throw error;\r\n      if (data) {\r\n        // Gruppieren, damit gleiche Zeiträume nur einmal angezeigt werden\r\n        const grouped = {};\r\n        data.forEach(item => {\r\n          const key = `${item.check_in}_${item.check_out}`;\r\n          grouped[key] = { check_in: item.check_in, check_out: item.check_out };\r\n        });\r\n        setFerienListe(Object.values(grouped));\r\n      }\r\n    } catch (error: any) {\r\n      Alert.alert('Fehler', error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFerien();\r\n  }, []);\r\n\r\n  // Ferien eintragen\r\n  const handleFerienEintragen = async () => {\r\n    if (!ferienStart || !ferienEnde) {\r\n      Alert.alert('Fehler', 'Bitte Start- und Enddatum angeben.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data: overlappingBookings, error: overlapError } = await supabase\r\n        .from('buchungen')\r\n        .select('zimmer_id')\r\n        .filter('check_in', 'lt', ferienEnde)\r\n        .filter('check_out', 'gt', ferienStart);\r\n\r\n      if (overlapError) throw overlapError;\r\n      if (overlappingBookings && overlappingBookings.length > 0) {\r\n        Alert.alert('Nicht möglich', 'In mindestens einem Zimmer existiert bereits eine Buchung in diesem Zeitraum.');\r\n        return;\r\n      }\r\n\r\n      const { data: zimmerData, error: zimmerError } = await supabase\r\n        .from('zimmer')\r\n        .select('id');\r\n      if (zimmerError) throw zimmerError;\r\n      if (!zimmerData || zimmerData.length === 0) {\r\n        Alert.alert('Fehler', 'Keine Zimmer gefunden.');\r\n        return;\r\n      }\r\n\r\n      const { data: existingFerienGuest } = await supabase\r\n        .from('gaeste')\r\n        .select('id')\r\n        .eq('vorname', 'Ferien')\r\n        .eq('nachname', 'Ferien');\r\n      let ferienGuestId;\r\n      if (existingFerienGuest && existingFerienGuest.length > 0) {\r\n        ferienGuestId = existingFerienGuest[0].id;\r\n      } else {\r\n        const { data: newGuest, error: guestError } = await supabase\r\n          .from('gaeste')\r\n          .insert([{ vorname: 'Ferien', nachname: 'Ferien' }])\r\n          .select('*')\r\n          .single();\r\n        if (guestError) throw guestError;\r\n        ferienGuestId = newGuest.id;\r\n      }\r\n\r\n      const bookings = zimmerData.map((zimmer: { id: number }) => ({\r\n        zimmer_id: zimmer.id,\r\n        gast_id: ferienGuestId,\r\n        check_in: ferienStart,\r\n        check_out: ferienEnde,\r\n        anzahl_personen: 0,\r\n        preis_pro_person: 0,\r\n        anzahlung: 0,\r\n        status: 'Ferien',\r\n        verpflegung: '',\r\n        hund: false,\r\n        zusatz_preis: '',\r\n        tel_email: '',\r\n        notiz: 'Ferienbuchung',\r\n      }));\r\n\r\n      const { error: insertError } = await supabase\r\n        .from('buchungen')\r\n        .insert(bookings);\r\n      if (insertError) throw insertError;\r\n\r\n      Alert.alert('Erfolg', 'Ferien erstellt.');\r\n      setFerienStart('');\r\n      setFerienEnde('');\r\n      fetchFerien();\r\n    } catch (error: any) {\r\n      console.error(error);\r\n      Alert.alert('Fehler', error.message);\r\n    }\r\n  };\r\n\r\n  // Ferien löschen\r\n  const handleFerienLöschen = async (check_in: string, check_out: string) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('buchungen')\r\n        .delete()\r\n        .eq('status', 'Ferien')\r\n        .eq('check_in', check_in)\r\n        .eq('check_out', check_out);\r\n      if (error) throw error;\r\n      Alert.alert('Erfolg', 'Ferien gelöscht.');\r\n      fetchFerien();\r\n    } catch (error: any) {\r\n      Alert.alert('Fehler', error.message);\r\n    }\r\n  };\r\n\r\n  // Ferien bearbeiten (verlängern/verkürzen)\r\n  const handleFerienBearbeiten = async () => {\r\n    if (!newStart || !newEnd || !currentEdit) {\r\n      Alert.alert('Fehler', 'Bitte neue Start- und Enddaten angeben.');\r\n      return;\r\n    }\r\n    try {\r\n      const { error } = await supabase\r\n        .from('buchungen')\r\n        .update({ check_in: newStart, check_out: newEnd })\r\n        .eq('status', 'Ferien')\r\n        .eq('check_in', currentEdit.check_in)\r\n        .eq('check_out', currentEdit.check_out);\r\n      if (error) throw error;\r\n      Alert.alert('Erfolg', 'Ferien aktualisiert.');\r\n      setEditModalVisible(false);\r\n      setCurrentEdit(null);\r\n      fetchFerien();\r\n    } catch (error: any) {\r\n      Alert.alert('Fehler', error.message);\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const handleLogout = async () => {\r\n    try {\r\n      await supabase.auth.signOut();\r\n      await AsyncStorage.clear();\r\n      navigation.reset({ index: 0, routes: [{ name: 'Login' }] });\r\n    } catch (error: any) {\r\n      Alert.alert('Fehler', error.message || 'Logout fehlgeschlagen.');\r\n    }\r\n  };\r\n\r\n  const renderFerienItem = ({ item }) => (\r\n    <View style={styles.ferienItem}>\r\n      <Text>{item.check_in} bis {item.check_out}</Text>\r\n      <View style={styles.ferienButtons}>\r\n        <Button title=\"Bearbeiten\" onPress={() => {\r\n          setCurrentEdit(item);\r\n          setNewStart(item.check_in);\r\n          setNewEnd(item.check_out);\r\n          setEditModalVisible(true);\r\n        }} />\r\n        <Button title=\"Löschen\" onPress={() => handleFerienLöschen(item.check_in, item.check_out)} color=\"red\" />\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Einstellungen</Text>\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Ferien eintragen</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Startdatum (YYYY-MM-DD)\"\r\n          value={ferienStart}\r\n          onChangeText={setFerienStart}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enddatum (YYYY-MM-DD)\"\r\n          value={ferienEnde}\r\n          onChangeText={setFerienEnde}\r\n        />\r\n        <Button title=\"Ferien eintragen\" onPress={handleFerienEintragen} />\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Bevorstehende Ferien</Text>\r\n        <FlatList\r\n          data={ferienListe}\r\n          keyExtractor={(item) => item.check_in + '_' + item.check_out}\r\n          renderItem={renderFerienItem}\r\n          ListEmptyComponent={<Text>Keine Ferien eingetragen.</Text>}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Logout</Text>\r\n        <Button title=\"Logout\" onPress={handleLogout} color=\"red\" />\r\n      </View>\r\n\r\n      <Modal\r\n        visible={editModalVisible}\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        onRequestClose={() => setEditModalVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text>Ferien bearbeiten</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Neues Startdatum (YYYY-MM-DD)\"\r\n              value={newStart}\r\n              onChangeText={setNewStart}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Neues Enddatum (YYYY-MM-DD)\"\r\n              value={newEnd}\r\n              onChangeText={setNewEnd}\r\n            />\r\n            <Button title=\"Speichern\" onPress={handleFerienBearbeiten} />\r\n            <Button title=\"Abbrechen\" onPress={() => setEditModalVisible(false)} color=\"red\" />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 20, justifyContent: 'center' },\r\n  title: { fontSize: 24, fontWeight: 'bold', textAlign: 'center', marginBottom: 24 },\r\n  section: { marginBottom: 40 },\r\n  sectionTitle: { fontSize: 18, fontWeight: 'bold', marginBottom: 12 },\r\n  input: {\r\n    height: 40,\r\n    borderColor: '#ccc',\r\n    borderWidth: 1,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 12,\r\n  },\r\n  ferienItem: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8 },\r\n  ferienButtons: { flexDirection: 'row' },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.5)'\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    width: '80%'\r\n  }\r\n});\r\n\r\nexport default EinstellungenScreen;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport NetInfo from '@react-native-community/netinfo';\r\n\r\nimport LoginScreen from './src/screens/LoginScreen';\r\nimport HomeScreen from './src/screens/HomeScreen';\r\nimport CalendarScreen from './src/screens/CalendarScreen';\r\nimport AnzahlungenScreen from './src/screens/AnzahlungenScreen';\r\nimport EinstellungenScreen from './src/screens/EinstellungenScreen';\r\nimport { supabase } from './src/supabaseClient';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  const [buchungen, setBuchungen] = useState<any[]>([]);\r\n  const [isConnected, setIsConnected] = useState(true);\r\n\r\n  // Vollständiges Laden der Buchungen (ohne Soft‑Delete)\r\n  const syncFullBuchungen = useCallback(async () => {\r\n    if (!isConnected) return;\r\n    try {\r\n      console.log(\"🔄 Vollständiges Laden der Buchungen...\");\r\n      const { data, error } = await supabase\r\n        .from('buchungen')\r\n        .select('*')\r\n        .is('deleted_at', null);\r\n      if (error) {\r\n        console.error(\"❌ Fehler beim Voll-Laden der Buchungen:\", error);\r\n        return;\r\n      }\r\n      console.log(\"📥 Vollständig geladene Buchungen:\", data);\r\n      if (data) {\r\n        setBuchungen(data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"⚠️ Fehler in syncFullBuchungen:\", error);\r\n    }\r\n  }, [isConnected]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = NetInfo.addEventListener(state => {\r\n      setIsConnected(state.isConnected);\r\n    });\r\n\r\n    // Initialer Datenabruf\r\n    syncFullBuchungen();\r\n\r\n    // Alle 2 Minuten alle Buchungen neu laden\r\n    const fullInterval = setInterval(syncFullBuchungen, 120000);\r\n\r\n    return () => {\r\n      clearInterval(fullInterval);\r\n      unsubscribe();\r\n    };\r\n  }, [syncFullBuchungen]);\r\n\r\n  console.log(\"📊 Buchungen in App.tsx:\", buchungen);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Login\">\r\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n        <Stack.Screen \r\n          name=\"Calendarscreen\" \r\n          children={() => <CalendarScreen buchungen={buchungen} onRefresh={syncFullBuchungen} />} \r\n        />\r\n        <Stack.Screen \r\n          name=\"AnzahlungenScreen\" \r\n          children={() => <AnzahlungenScreen onRefresh={syncFullBuchungen} />} \r\n        />\r\n        <Stack.Screen name=\"EinstellungenScreen\" component={EinstellungenScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n","import { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"783bc47a\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/Oberraut/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [624], () => (__webpack_require__(211)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["supabase","createClient","styles","StyleSheet","create","header","height","flexDirection","alignItems","backgroundColor","borderBottomWidth","borderBottomColor","paddingHorizontal","sideContainer","flex","logo","width","resizeMode","logoBetrieb","Header","_jsxs","View","style","children","_jsx","Image","source","require","LoginScreen","navigation","useNavigation","email","setEmail","useState","password","setPassword","errorMsg","setErrorMsg","loading","setLoading","useEffect","async","lastLogin","AsyncStorage","getItem","data","session","auth","getSession","lastLoginTime","Date","parseInt","now","getTime","replace","error","console","checkLoginStatus","loadingContainer","ActivityIndicator","size","color","Text","container","title","TextInput","input","placeholder","autoCapitalize","keyboardType","value","onChangeText","secureTextEntry","Button","onPress","signInWithPassword","user","message","setItem","toString","err","disabled","padding","justifyContent","fontSize","marginBottom","textAlign","borderWidth","borderColor","paddingVertical","borderRadius","isSameDay","d1","d2","getFullYear","getMonth","getDate","findDayIndex","date","days","findIndex","d","renderRoomStatus","room","selectedDate","buchungen","gaeste","currentBookings","filter","b","zimmer_id","id","checkIn","check_in","checkOut","check_out","length","statusBar","statusBarText","statusBarsContainer","map","checkInDate","checkOutDate","guest","find","g","gast_id","guestLastName","nachname","verpflegungAbbr","verpflegung","statusLabel","anzahl_personen","fontWeight","dateSelector","dateText","navigationButtons","roomList","flexWrap","roomCard","roomTitle","statusText","marginVertical","guestName","textDecorationLine","summary","summaryBorder","borderTopWidth","summaryText","customModalContainer","margin","customModalOverlay","customModalContent","modalTitle","navFooter","marginTop","HomeScreen","daysArray","setDaysArray","zimmer","setZimmer","setBuchungen","setGaeste","setSelectedDate","searchQuery","setSearchQuery","detailModalVisible","setDetailModalVisible","selectedDetailBooking","setSelectedDetailBooking","scrollViewRef","useRef","fetchData","zimmerData","from","select","buchungenData","gaesteData","result","startDate","setDate","endDate","setMonth","current","dayNumber","padStart","monthYear","toLocaleDateString","month","year","push","generateExtendedDaysArray","interval","setInterval","clearInterval","indexOfToday","offsetX","scrollTo","x","animated","changeDate","offset","newDate","openBookingDetails","goToCalendar","navigate","goToAnzahlungen","goToSettings","ScrollView","nummer","reduce","sum","idx","roomNum","z","TouchableOpacity","vorname","Modal","isVisible","onBackdropPress","useNativeDriver","status","anzahlung","preis_pro_person","zusatz_preis","tel_email","notiz","myAlert","msg","window","alert","RadioGroup","memo","options","selectedValue","onChange","radioGroup","opt","isSelected","TouchableWithoutFeedback","radioOption","radioOptionSelected","radioLabel","radioLabelSelected","label","statusOptions","verpflegungOptions","hundOptions","modalContainer","scrollContainer","flexGrow","modalOverlay","modalContent","alignSelf","marginRight","buttonRow","BookingFormModal","onClose","onSubmit","onRefresh","initialGuestName","initialPersonCount","selectedRoomId","setGuestName","personCount","setPersonCount","setStatus","setAnzahlung","setVerpflegung","preisProPerson","setPreisProPerson","hund","setHund","zusatzPreis","setZusatzPreis","telEmail","setTelEmail","setNotiz","isSubmitting","setIsSubmitting","trim","isFormValid","split","isNaN","validateRoomAvailability","useCallback","roomId","newCheckIn","newCheckOut","eq","is","handleCreate","count","parsedAnzahlung","parseFloat","parsedPreisProPerson","parsedZusatzPreis","log","nameParts","guestId","existingGuest","existingGuestError","newGuest","insert","single","content","contentContainerStyle","keyboardShouldPersistTaps","keyboardDismissMode","returnKeyType","onSubmitEditing","Keyboard","dismiss","multiline","coverScreen","propagateSwipe","avoidKeyboard","sharedInputStyle","modalButtons","BookingEditModal","booking","onUpdate","onDelete","roomNumber","setRoomNumber","setCheckIn","setCheckOut","findRoomIdByNumber","numStr","newRoomId","not","handleUpdate","newRoomNumber","update","handleDelete","Promise","resolve","confirm","delete","blurOnSubmit","DAY_WIDTH","parseDate","dateStr","includes","formatDayCellData","isIntervalAvailableForRoom","start","end","bookings","bookingStart","bookingEnd","getBuchungForDay","dayData","zimmerId","DayCell","React","day","existingBooking","dayCell","selectedDayCell","dayCellText","BookingBlockRow","props","onPressBooking","overlayContainer","startIndex","endIndex","blockLeft","blockWidth","blockColor","activeOpacity","bookingBlock","left","bookingBlockText","numberOfLines","CalendarScreen1","localBuchungen","setLocalBuchungen","pastDays","setPastDays","futureMonths","setFutureMonths","selectedCheckIn","setSelectedCheckIn","selectedCheckOut","setSelectedCheckOut","setSelectedRoomId","isBookingModalVisible","setBookingModalVisible","isBookingEditModalVisible","setBookingEditModalVisible","selectedBooking","setSelectedBooking","guestInput","setGuestInput","personCountInput","setPersonCountInput","displayedDate","setDisplayedDate","lastRefreshTimeRef","useMemo","generateDaysArray","intervalId","useFocusEffect","handleScroll","event","centerX","nativeEvent","contentOffset","layoutMeasurement","index","Math","floor","scrollToMonth","targetDate","targetIndex","handleMonthButtonPress","monthIndex","currentYear","addBackwardExtension","prev","addForwardExtension","handleDayPress","isAvailable","bookingAtDay","Alert","handleSearch","lowerQuery","toLowerCase","matchingBooking","openBookingModal","handleBookingPress","bookingData","handleBookingSubmit","toISOString","handleBookingUpdate","handleBookingDelete","monthYearContainer","monthYearText","extensionButtonsContainer","tableContainer","fixedColumn","headerCell","leftHeaderCell","headerText","roomCell","roomText","horizontal","horizontalScroll","ref","onScroll","scrollEventThrottle","headerRow","isToday","weekday","weekend","startsWith","todayHeader","weekendHeader","headerSmallText","position","roomRow","existingCheckInDate","monthButtonsContainer","abbr","monthButton","monthButtonText","searchContainer","searchInput","bookingButton","bookingButtonText","undefined","paddingTop","borderRightWidth","top","right","bottom","pointerEvents","sectionTitle","card","boldText","radioButton","radioButtonRed","radioButtonGreen","radioText","AnzahlungenScreen","today","buchungenError","or","gte","order","ascending","gaesteError","updateStatus","buchungId","neuerStatus","filteredBuchungen","gast","offeneAnzahlungenSumme","bezahlteAnzahlungenSumme","section","ferienItem","ferienButtons","EinstellungenScreen","ferienStart","setFerienStart","ferienEnde","setFerienEnde","ferienListe","setFerienListe","editModalVisible","setEditModalVisible","currentEdit","setCurrentEdit","newStart","setNewStart","newEnd","setNewEnd","fetchFerien","gt","grouped","forEach","item","key","Object","values","overlappingBookings","overlapError","zimmerError","existingFerienGuest","ferienGuestId","guestError","insertError","FlatList","keyExtractor","renderItem","renderFerienItem","handleFerienLöschen","ListEmptyComponent","signOut","clear","reset","routes","name","visible","animationType","transparent","onRequestClose","Stack","createNativeStackNavigator","registerRootComponent","isConnected","setIsConnected","syncFullBuchungen","unsubscribe","NetInfo","state","fullInterval","NavigationContainer","Navigator","initialRouteName","Screen","component","CalendarScreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","f","e","chunkId","all","promises","u","miniCssF","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","type","target","head","appendChild","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","reject","Error","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}